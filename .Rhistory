install.packages ('ggplot2')
library (ggplot2)
library ('ggplot2')
library (ggplot2)
ggplot (mtcars, aes(hp, mpg)) + geom_point()
getwd()
cd /
get(wd)
getwd()
cd...
cd c:
cd c
cd c:\\
install.packages (c("apsrtable", "brew", "countrycode", "devtools", "digest", "formatR", "gdata", "ggplot2", "googleVis", "httr", "knitcitations", "knitr", "markdown", "openair", "plyr", "quantmod", "repmis", "reshape2", "RCurl", "rjson", "RJSONIO", "stargazer", "textreg", "tools", "treebase", "twitteR", "WDI", "XML", "xtable", "zelig"))
install.packages(c("apsrtable", "brew", "countrycode", "devtools",
install.packages(c("apsrtable", "brew", "countrycode", "devtools",
install.packages (c("apsrtable", "brew", "countrycode", "devtools", "digest", "formatR", "gdata", "ggplot2", "googleVis", "httr", "knitcitations", "knitr", "markdown", "openair", "plyr", "quantmod", "repmis", "reshape2", "RCurl", "rjson", "RJSONIO", "stargazer", "textreg", "tools", "treebase", "twitteR", "WDI", "XML", "xtable", "zelig"))
library(devtools)
install.packages ("devtools")
library(devtools)
install.packages("rtools")
install.packages("Rtools")
install.packages("countrycode")
install.packages("rtools")
install.packages ("apsrtable")
install.packages(c('apsrtable'))
sessionInfo()
citation()
install.packages ("rtools")
citation(rtools)
Hitler <- 88
Hitler
Hitler <- megaguter Endsiegproduzent
Hitler <- "Super krasser Endsieg produzierender Groaefaz"
Hitler
Hitler <- 88
Hitler
88
Hallo
is88(hitler)
is.88(Hitler)
class(Hitler)
Hitler <- TRUE
class(Hitler)
is.na(Hitler)
is.NULL(Hitler)
is.TRUE(Hitler)
is.null(Hitler)
istrue(Hitler)
isTRUE(Hitler)
3<=4
2+3
2+3 >=4-1
1==-1
Goering <- c(1,2,3)
Goering
Summarise Hitler
summary (Hitler)
summary (Goering)
?Summary
combined_HG <- (Hitler, Goering)
combined_HG <- ("Hitler", "Goering")
delete Hitler
del(Hitler)
delete(Hitler)
fruitbasket <- c(1,1,1,2,2,1,2,3,1,3,2)
fruitkind <- c(peaches, plums, apples, mangos)
fruitkind <- c("peaches", "plums", "apples", "mangos")
completebasket <- factor(fruitbasket, labels=fruitkind)
completebasket <- factor(fruitbasket, labels = fruitkind)
fruitbasket <- c(1,1,1,1,1,2,2,2,2,3,3)
completebasket <- factor(fruitbasket, labels = fruitkind)
data(swiss)
?swiss
summary(swiss)
names(swiss)
data(swiss)
data(Germany)
data()
?UKDriverDeaths
?Seatbelts
?UKGas
??UKGas
?USArrests
data(USArrests)
summry(Usarrests)
summary(usarrest)
summary(usarrests)
summary(USArrests)
hist(USArrests)
hist(USArrests$Murder)
?WWWusage
?euro
?eurodist
data(eurodist)
names(eurodist)
?women
?presidents
?JohnsonJohnson
?AirPassengers
?WorldPhones
names(WorldPhones)
data(WorldPhones)
names(WorldPhones)
hist(WorldPhones$Europe)
names(WorldPhones)
head(WorldPhones[1:7, 1:7])
hist(Worldphones$1951)
hist(Worldphones$N.Amer)
hist(WorldPhones$N.Amer)
data(swiss)
hist(swiss$examniation)
hist(swiss$examination)
# 25. September 2014, Lukas and Cameron are playing around with data
# choosing some data from the core R data sets on US States statistics
data(state)
?state
state.x77
# state.x77 is a interetsing matrix, we go on with this one
statedata1 <- data.frame(state.x77, state.x77, stringsAsFactors = FALSE) # pulling out the "state.x77" matrix with 50 rows and 8 columns giving some statistics in the respective columns.
# we are interested in Murder (Murder and Non-negligent Manslaughter rate per 100,000 Population (1976))
summary(statedata1$Murder)
# making a barplot showing
barplot(statedata1$Murder, main="Murder and Non-negligent Manslaughter rate per 100,000 Population (1976)", names.arg = state.abb, las=2, xlab="US States", space=1)
# we did not do the "setwd" with harddrive directory thing, as we were working on github online only
# hopefully this works instead
install.packages("devtools")
source_url('http://github.com/LBRETZIN/TestS18/blob/TestBranch/A1women.txt')
# the end :)
names(WorldPhones)
names(USArrests)
hist(USArrests$Murder)
?USArrests
MuricaCrime <- data.frame(USArrests, USArrests, StringsAsFactors = False)
MuricaCrime <- data.frame(USArrests, USArrests, StringsAsFactors = FALSE)
sapply (MuricaCrime$Murder, mean, na.rm=TRUE)
sapply (MuricaCrime$Murder, median, na.rm=TRUE)
sapply (MuricaCrime$1, median, na.rm=TRUE)
sapply (MuricaCrime$,1, median, na.rm=TRUE)
sapply (MuricaCrime$Murder, median, na.rm=TRUE)
Summary(MuricaCrime$Murder)
install.packages (Hmisc)
install.packages(Hmisc)
install.packages(HMisc)
library(Hmisc)
sapply (MuricaCrime$Murder, median)
hist(MuricaCrime$Murder)
barplot(MuricaCrime$Murder)
barplot(MuricaCrime$Murder, main=Arrests for murder per 100k population in 1973, names.arg=state.abb)
barplot(MuricaCrime$Murder, main="Arrests for murder per 100k population in 1973", names.arg=state.abb)
barplot(MuricaCrime$Murder, main="Arrests for murder per 100k population in 1973", names.arg=state.abb, las=2)
barplot(MuricaCrime$Murder, main="Arrests for murder per 100k population in 1973", names.arg=state.abb, las=2, xlab="Us States")
barplot(MuricaCrime$Murder, main="Arrests for murder per 100k population in 1973", names.arg=state.abb, las=2, xlab="Us States")
barplot(MuricaCrime$Murder, main="Arrests for murder per 100k population in 1973", names.arg=state.abb, las=2, xlab="US States")
barplot(MuricaCrime$Murder, main="Arrests for murder per 100k population in 1973", names.arg=state.abb, las=2, xlab="US States", space=1)
hist(MuricaCrime$Murder, main="Arrests for murder per 100k population in 1973", names.arg=state.abb, las=2, xlab="US States", space=1)
colsums(MuricaCrime)
colums(MuricaCrime)
columns(MuricaCrime)
colSums(MuricaCrime)
colSums(MuricaCrime$Murder)
MuricaCrime <- data.frame(USArrests$1, USArrests$1, StringsAsFactors = False
MuricaCrime <- data.frame(USArrests$Murder, USArrests$1, StringsAsFactors = False
MuricaCrime <- data.frame(USArrests$Murder, USArrests, StringsAsFactors = False
MuricaCrime <- data.frame(USArrests$Murder, USArrests, StringsAsFactors = False)
MuricaCrime <- data.frame(USArrests$Murder, USArrests, StringsAsFactors = False)
MuricaCrime <- data.frame(USArrests$Murder, USArrests, StringsAsFactors = FALSE)
data(USArrests)
MuricaCrime <- data.frame(USArrests, USArrests, StringsAsFactors = False)
MuricaCrime <- data.frame(USArrests, USArrests, StringsAsFactors = FALSE)
MuricaCrime <- data.frame(USArrests, StringsAsFactors = FALSE)
MuricaCrime <- data.frame(USArrests$Murder, StringsAsFactors = FALSE)
names(MuricaCrime)
hist(MuricaCrime)
MuricaCrime <- data.frame(USArrests$Murder)
hist(MuricaCrime)
barplot(MuricaCrime)
colSums(MuricaCrime)
Mur <- data.frame(USArrests$col1:3)
Murder <- data.frame(USArrests$Murder, stringsAsFactors = FALSE)
hist(Murder)
hist(USARRESTS)
hist(USArrests)
?USArrests
We are interested in the number of arrests for murder in the US,
#which we can find in the dataset "USArests"
?USArrests
data(USArrests)
#After loading the dataset, we also want to have it available as a dataframe,
#called MuricaCrime
MuricaCrime <- data.frame(USArrests, stringsAsFactors = False)
#Since we just care about the data for murder, we prepare a barplot
#showing the number of arrests for murder per 100,000 people in each of the 50
#states in 1973.
barplot(MuricaCrime$Murder,
main="Arrests for murder per 100k population in 1973",
names.arg=state.abb,
las=2, xlab="US States", space=1)
+ source(https://github.com/SaschaSchuster/Social_Data_Assignment1.git/murder1973, local=FALSE)
+ source(https:\\github.com/SaschaSchuster/Social_Data_Assignment1.git/murder1973, local=FALSE)
source(https:\\github.com/SaschaSchuster/Social_Data_Assignment1.git/murder1973, local=FALSE)
source(https://github.com/SaschaSchuster/Social_Data_Assignment1.git/murder1973, local=FALSE)
source(https:/github.com/SaschaSchuster/Social_Data_Assignment1.git/murder1973, local=FALSE)
source(https:github.com/SaschaSchuster/Social_Data_Assignment1.git/murder1973, local=FALSE)
source(github.com/SaschaSchuster/Social_Data_Assignment1.git/murder1973, local=FALSE)
source(www.github.com/SaschaSchuster/Social_Data_Assignment1.git/murder1973, local=FALSE)
source(~/telephones.R)
source(~/telephones.R)
soure(Social_Data_Assignment1/telephones.R)
source(Social_Data_Assignment1/telephones.R)
source(~Social_Data_Assignment1/telephones.R)
source(~Social_Data_Assignment1/telephones.R, local=TRUE)
source(~Desktop/Social_Data_Assignment1/telephones.R, local=TRUE)
?AirPassengers
data(AirPassengers)
AirPassengers
colSums(AirPassengers$Jan)
colSums(AirPassengers)
colSums(AirPassengers$1949)
rowSums(AirPassengers$1949)
rowSums(AirPassengers$1)
rowSums(AirPassengers$"1949")
January <- (AirPassengers$Jan)
Array <- data.frame(AirPassengers, stringsAsFactors = FALSE)
colSums (Array, na.rm + FALSE, dims =1)
colSums (Array, na.rm = FALSE, dims =1)
rowSums (Array, na.rm = FALSE, dims=1)
Array
barplot(Arrays)
barplot(Array)
Array <- data.frame(AirPassengers, stringsasFactors = TRUE)
Array
data(HairEyeColor)
HairEyeColor
Titanic
sleep
state.x77
?state.x77
data(swiss)
swiss
colSums(swiss)
mean(swiss)
source=(https://github.com/SaschaSchuster/Social_Data_Assignment1/murder1973.git)
source=('https://github.com/SaschaSchuster/Social_Data_Assignment1/murder1973.git')
colMeans(Swiss)
colMeans(swiss)
colMeans(swiss, digits = 2)
colMeans(swiss, digits=2)
summary(swiss, digits=2)
summary(swiss, digits=1)
#For our second file, we are returning to the swiss data set included in to R to try out some functions of descriptive
#statistics, and also to include a dynamically linked file.
?swiss
data(swiss)
source=('https://github.com/SaschaSchuster/Social_Data_Assignment1/murder1973.git')
#First, let us have a look at the data we have for every canton in a view for all of Switzerland
colSums(swiss)
#Of course we are also interested in the mean of all columns, which we get by
colMeans(swiss)
#Finally, some overall, comparable data would be nice, but well rounded to the full digit.
summary(swiss, digits=1)
range(swiss)
range(swiss$Fertility)
r
title: "Untitled"
install.packages(microtyope)
install.packages(microtype)
###<b>
library(repmis)
library(repmis)
library(repmis)
install.packages()
install.packages('repmis')
library(repmis)
install.packages(repmis)
install.packages('repmis')
library(repmis)
install.packages('rJava')
library(rJava)
library(ggplot2)
fin(rJava)
fun(rJava)
find.java <- function() {
for (root in c("HLM", "HCU")) for (key in c("Software\\JavaSoft\\Java Runtime Environment",
"Software\\JavaSoft\\Java Development Kit")) {
hive <- try(utils::readRegistry(key, root, 2),
silent = TRUE)
if (!inherits(hive, "try-error"))
return(hive)
}
hive
}
find.java()
library(dplyr)
install.packages("dplyr", "httr", "XML")
install.packages("dplyr", "httr", "XML")
librray(dplyr)
libray(dplyr)
library(dplyr)
install.packages("dplyr")
rm(find.java)
URL <- 'http://en.wikipedia.org/wiki/List_of_largest_cities_and_second_largest_cities_by_country'
tables <- URL %>% GET() %>% content(as = 'parsed') %>% readHTMLTable()
tables <- URL %>% GET() %>%
content(as = 'parsed')
tables <- URL %>% GET() %>% content(as = 'parsed') %>% readHTMLTable()
tables <- URL %>% GET() %>%
content(as = 'parsed') %>%
readHTMLTable()
tables <- URL %>% GET() %>%
content(as = 'parsed') %>%
readHTMLTable()
install.packages("XML")
tables <- URL %>% GET() %>%
content(as = 'parsed') %>%
readHTMLTable()
install.packages("httr")
tables <- URL %>% GET() %>%
content(as = 'parsed') %>%
readHTMLTable()
library(XML)
library(httr)
library(dplyr)
tables <- URL %>% GET() %>%
content(as = 'parsed') %>%
readHTMLTable()
names(tables)
readHTMLTable(URL)
packs <- c('dplyr', 'XML', 'httr')
install.packages(packs)
library(packs)
packs <- c('dplyr', 'XML', 'httr')
install.packages('packs')
library(packs)
library('packs')
library("packs")
packs <- c('dplyr', 'XML', 'httr')
install.packages('packs')
library(dplyr)
library(XML)
library(httr)
install.packages("packs")
cities </ as.data.frame(readHTMLTable(URL
cities <- as.data.frame(readHTMLTable(URL
))
cities
View(cities)
View(cities)
View(cities)
cities <- as.data.frame(readHTMLTable(URL), header=TRUE)
select(cities, [1-3])
select(cities, -source)
select(cities, -Source)
select(cities, -Null.Source)
head(cities)
?iconv
iconv(cities)
View(cities)
View(cities)
iconv(cities, "UTF-8")
View(cities)
View(cities)
iconv(cities, "latin1")
View(cities)
cities <- as.data.frame(readHTMLTable(URL), header=TRUE, strings.as.factors=TRUE, encoding=UTF-8)
select(cities, -Source)
View(cities)
select(cities, -NULL.Source)
grep(^[A-Z]$, cities)
grep('^[A-Z]$', cities)
sample_frac(cities, 10)
sample_frac(cities, 0.1)
naDF <- data.frame(a = sample(c(1,2), 100, rep=TRUE) )
naDF <- data.frame(a = sample(c(1,2), 100, rep=TRUE), b = sample(c(3,4), 100, rep=TRUE), fNA = sample(c(100, 200, 300, 400, NA), 100, rep=TRUE))
View(naDF)
View(naDF)
filldf <- data.frame(a = c(1,2,1,2) b = c(3,3,4,4), c = c(5,5,5,5), fFull = c(100,200,300,400))
filldf <- data.frame(a = c(1,2,1,2), b = c(3,3,4,4), c = c(5,5,5,5), fFull = c(100,200,300,400))
filldf
FilledInData <- FillIn(naDF, filldf, Var1=fNA, var2=fFull, KeyVar=c("a","b")
)
install.packages("DataCombine")
FilledInData <- FillIn(naDF, filldf, Var1=fNA, var2=fFull, KeyVar=c("a","b")
)
library(DataCombine)
FilledInData <- FillIn(naDF, filldf, Var1=fNA, var2=fFull, KeyVar=c("a","b"))
FilledInData <- FillIn(naDF, filldf, Var1="fNA", var2="fFull", KeyVar=c("a","b"))
FilledInData <- FillIn(naDF, filldf, Var1="fNA", Var2="fFull", KeyVar=c("a","b"))
view(naDF)
View(naDF)
View(FilledInData)
View(filldf)
View(filldf)
install.packages('WDI')
WB_Urban_Pop = WDI(indicator='SP.URB.TOTL', country='all', start=1970, end=2013)
library(WDI)
WB_Urban_Pop = WDI(indicator='SP.URB.TOTL', country='all', start=1970, end=2013)
View(WB_Urban_Pop)
View(WB_Urban_Pop)
WDIsearch([Uu]rban)
WDIsearch('[Uu]rban')
rm(WB_Urban_Pop)
WDIUrbanDat <- WDI(indicator=c('EN.POP.SLUM.UR.ZS', 'EN.URB.LCTY.UR.ZS', 'EN.URB.MCTY', 'EN.URB.MCTY.TL.ZS', 'SP.URB.GROW', 'SP.URB.TOTL', 'SP.URB.TOTL.IN.ZS'), country=all, start=1970, end=2013)
?WDI
WDIUrbanDat <- WDI(indicator=c('EN.POP.SLUM.UR.ZS', 'EN.URB.LCTY.UR.ZS', 'EN.URB.MCTY', 'EN.URB.MCTY.TL.ZS', 'SP.URB.GROW', 'SP.URB.TOTL', 'SP.URB.TOTL.IN.ZS'), country="all", start=1970, end=2013)
View(WDIUrbanDat)
View(WDIUrbanDat)
?WDIcashe
?WDIcache
WDIUrbanDat2 <- WDI(indicator=c('EN.POP.SLUM.UR.ZS', 'EN.URB.LCTY.UR.ZS', 'EN.URB.MCTY', 'EN.URB.MCTY.TL.ZS', 'SP.URB.GROW', 'SP.URB.TOTL', 'SP.URB.TOTL.IN.ZS'), country="all", start=1970, end=2013, extras=TRUE)
WDIUrbanDat2 <- WDI(indicator=c('EN.POP.SLUM.UR.ZS', 'EN.URB.LCTY.UR.ZS', 'EN.URB.MCTY', 'EN.URB.MCTY.TL.ZS', 'SP.URB.GROW', 'SP.URB.TOTL', 'SP.URB.TOTL.IN.ZS'), country="all", start=1970, end=2013, extra=TRUE)
View(WDIUrbanDat)
View(WDIUrbanDat)
?WDI
View(WDIUrbanDat2)
getwd()
getwd
getwd()
setwd("R/GTD/UrbanTerror")
getwd()
