#Including dummy variables for coastal megacities
source('SmallScripts/CoastalMC.R')
#Deleting what is not needed anymore
rm(UrbanLoc, table ,URL, CoCi, CoCiLoc, LUC)
#Caching the Urban Centers dataframe
write.csv(UrbanCenters, "Cache/UrbanCenters.csv")
View(UrbanCenters)
View(UrbanCenters)
UrbanCenters$City <- gsub("\\x2d.*","", perl=TRUE, UrbanCenters$City)
View(UrbanCenters)
##### Urban Centers #####
#We use a Wikipedia article on global Urban Centers for our analysis on the geographical distance from the location of attacks
#to the nearest, "important" city. We then use the google.maps API to geolocate each of the centers.
###### Gathering Data  ######
# Scrap Wiki on Urban Centers using the 'XML' package
URL <- 'http://en.wikipedia.org/w/index.php?title=List_of_urban_areas_by_population&section=2'
table <- readHTMLTable(URL, encoding = "UTF-16")
UrbanCenters <- table [[2]]
UrbanCenters$City <- as.character(UrbanCenters$City)
colnames(UrbanCenters)[5] <- "Area"
colnames(UrbanCenters)[6] <- "Density"
##### Cleaning Data #####
#Cleaning the Urban Centers name in order to allow google.maps API to find them
source('SmallScripts/UrbanCleaning.R')
###### Manipulate Data ######
#Putting in a string with "Country, City" to allow google.maps API to find them
CoCi <-data.frame(paste(UrbanCenters$Country, UrbanCenters$City, sep=", "), row.names = NULL)
CoCi["loc"] <- CoCi
CoCi$loc <- as.character(CoCi$loc)
CoCi$loc <- gsub("^..", "", CoCi$loc)
CoCiLoc<-(CoCi$loc)
#Looking up lon/lat data for each Urban Center via google.maps using the geocode function of the package maps.
#This is a very time consuming process, which is why we chose to cache the result to reduce computation time for this script.
if(file.exists("Cache/UrbanLoc.csv"))
{UrbanLoc <- read.csv("Cache/UrbanLoc.csv")
} else
{
UrbanLoc <- geocode(CoCiLoc, output = c("latlon", "latlona", "more", "all"),messaging = FALSE, sensor = FALSE, override_limit = FALSE)
write.csv(UrbanLoc, "Cache/UrbanLoc.csv")
}
#Inlcuding geographic data into the original Urban Centers data frame
UrbanCenters["lat"] <- UrbanLoc$lat
UrbanCenters["lon"] <- UrbanLoc$lon
UrbanCenters["full.name"] <- CoCiLoc
UrbanCenters$City <- tolower(UrbanCenters$City)
# remove commas
UrbanCenters$Population <- gsub("\\,","",UrbanCenters$Population)
UrbanCenters$Area <- gsub("\\,","",UrbanCenters$Area)
UrbanCenters$Density <- gsub("\\,","",UrbanCenters$Density)
# Assigning a 1 to all the largest urban centers in a country
UrbanCenters$Population <- as.numeric(UrbanCenters$Population)
LUC <- aggregate(Population ~ Country,UrbanCenters,max)
LUC["largest.UC"] <- 1
UrbanCenters <- merge(UrbanCenters, LUC, by=c("Population", "Country"), all.x=TRUE)
UrbanCenters <- UrbanCenters[order(-UrbanCenters$Population), ]
UrbanCenters$largest.UC <- recode(UrbanCenters$largest.UC, "NA=0")
#Including dummy variables for coastal megacities
source('SmallScripts/CoastalMC.R')
#Deleting what is not needed anymore
rm(UrbanLoc, table ,URL, CoCi, CoCiLoc, LUC)
#Caching the Urban Centers dataframe
write.csv(UrbanCenters, "Cache/UrbanCenters.csv")
View(UrbanCenters)
View(WC.UC.dist)
#############################################################################################################
################################################ 4. Manitulating  ###########################################
#############################################################################################################
# Country level data from the World Bank Development Indicators (WDI) and the The Correlates of War (COW) project data on wars.
if(file.exists("Cache/CountryData.csv")){CountryData <- read.csv("Cache/CountryData.csv")} else{source("1.b - Country Data.R")}
# City level data from a number of sources, including web scraping
if(file.exists("Cache/WC.UC.dist.csv")) {WC.UC.dist <- read.csv("Cache/WC.UC.dist.csv")} else{source("1.c - City Data.R")}
G <- WC.UC.dist
G["realpop"] <- G$pop
G["year"] <- 2010
G["country"] <- G$country.etc
GM <- merge(G, CountryData, by=c("country", "year"), all.x=TRUE)
G <- subset(GM, select=c(realpop, country, name, capital, pop, largestC, part.of.urban.center, Closest.Urban.Center, largest.UC, Population,
EN.URB.LCTY.UR, EN.URB.MCTY, SP.URB.TOTL,SP.POP.TOTL))
rm(GM)
# UC as city-like name
X <- gsub(".*,","",G$Closest.Urban.Center)
source('SmallScripts/CleanSpecialCharacters.R')
G["UC"] <- X
rm(X)
# if UC attacked and not largest UC use UC Pop
G$realpop <- ifelse(G$part.of.urban.center==TRUE, G$Population, G$realpop)
# if largest C use EN.URB.LCTY.UR
G$realpop <- ifelse((G$part.of.urban.center==FALSE&(G$largestC==1)&(!is.na(G$EN.URB.LCTY))), G$EN.URB.LCTY.UR, G$realpop)
G <-G[order(-G$realpop), ]
# if UC attacked and largest UC  use EN.URB.LCTY.UR
G$realpop <- ifelse((G$part.of.urban.center==TRUE&(!is.na(G$EN.URB.LCTY))), (ifelse(G$largest.UC==1, G$EN.URB.LCTY, G$realpop)),
G$realpop)
#################################
# finding sums in the WC.UC Data  for the 3 categories (largest, UC and rest) we have WDI Data for
G.UC.SUMS <- subset(G, select = c(realpop, country, name, pop, Population, EN.URB.LCTY.UR, EN.URB.MCTY, SP.URB.TOTL,
SP.POP.TOTL, part.of.urban.center, UC), realpop >= 999999)
G.UC.SUMS$name <- ifelse((G.UC.SUMS$part.of.urban.center==TRUE), G.UC.SUMS$UC, G.UC.SUMS$name)
G.UC.SUMS$pop <-NULL
G.UC.SUMS$row.names <-NULL
G.UC.SUMS<-G.UC.SUMS[!duplicated(G.UC.SUMS$realpop),]
G.UC.SUMS2<-aggregate(G.UC.SUMS$realpop, by=list(country=G.UC.SUMS$country), FUN=sum)
G.UC.SUMS2["SUM.fake.MCTY"] <- G.UC.SUMS2$x
G.UC.SUMS2$x <- NULL
G <- merge(G, G.UC.SUMS2, by=c("country"), all.x=TRUE)
rm(G.UC.SUMS2, G.UC.SUMS)
G.SC.SUMS <- subset(G, select = c(realpop, country, name, pop, Population, EN.URB.LCTY.UR, EN.URB.MCTY, SP.URB.TOTL,
SP.POP.TOTL, part.of.urban.center, UC), realpop <= 999999)
G.SC.SUMS$name <- ifelse((G.SC.SUMS$part.of.urban.center==TRUE), G.SC.SUMS$UC, G.SC.SUMS$name)
G.SC.SUMS$pop <-NULL
G.SC.SUMS$row.names <-NULL
G.SC.SUMS<-G.SC.SUMS[!duplicated(G.SC.SUMS$realpop),]
G.SC.SUMS2<-aggregate(G.SC.SUMS$realpop, by=list(country=G.SC.SUMS$country), FUN=sum)
G.SC.SUMS2["SUM.fake.REST"] <- G.SC.SUMS2$x
G.SC.SUMS2$x <- NULL
G <- merge(G, G.SC.SUMS2, by=c("country"), all.x=TRUE)
rm(G.SC.SUMS2, G.SC.SUMS, X)
G["Restpop.WDI"]<- G$SP.URB.TOTL - G$EN.URB.MCTY
G["MCTYpop.WDI"]<- G$EN.URB.MCTY - G$EN.URB.LCTY.UR
# if UC attacked and largest UC  use EN.URB.LCTY.UR
G$realpop <- ifelse((G$part.of.urban.center==TRUE&(!is.na(G$EN.URB.LCTY))),
(ifelse(G$largest.UC==1, G$EN.URB.LCTY, G$realpop)),
G$realpop)
# chaning the size of all cities under 1m inhabitants so the county sum fits the WDI
G$realpop <- ifelse((G$realpop!=G$EN.URB.LCTY)&(G$realpop<=999999)&(!is.na(G$EN.URB.LCTY))&(!is.na(G$SUM.fake.REST))&
(!is.na(G$Restpop.WDI))&(G$SUM.fake.REST!=0), (G$realpop*G$Restpop.WDI/G$SUM.fake.REST), G$realpop)
# chaning the size of all cities over 1m inhabitants so the county sum fits the WDI
G$realpop <- ifelse((G$realpop!=G$EN.URB.LCTY)&(G$realpop>=999999)&(!is.na(G$EN.URB.LCTY))&(!is.na(G$SUM.fake.MCTY))&
(!is.na(G$MCTYpop.WDI))&(G$SUM.fake.REST!=0), (G$realpop*G$MCTYpop.WDI/G$SUM.fake.MCTY), G$realpop)
# bringing it back into the WC.UC.dist
G <-G[order(-G$pop, G$name), ]
WC.UC.dist <-WC.UC.dist[order(-WC.UC.dist$pop, WC.UC.dist$name), ]
WC.UC.dist["org.pop"] <- WC.UC.dist$pop
WC.UC.dist$pop <- G$realpop
WC.UC.dist["old.name"] <- as.character(G$name)
WC.UC.dist$name <- ifelse((G$part.of.urban.center==TRUE), G$UC, G$old.name)
rm(G)
G <- WC.UC.dist
G["realpop"] <- G$pop
G["year"] <- 2010
G["country"] <- G$country.etc
GM <- merge(G, CountryData, by=c("country", "year"), all.x=TRUE)
G <- subset(GM, select=c(realpop, country, name, capital, pop, largestC, part.of.urban.center, Closest.Urban.Center, largest.UC, Population,
EN.URB.LCTY.UR, EN.URB.MCTY, SP.URB.TOTL,SP.POP.TOTL))
rm(GM)
# UC as city-like name
X <- gsub(".*,","",G$Closest.Urban.Center)
source('SmallScripts/CleanSpecialCharacters.R')
G["UC"] <- X
rm(X)
# if UC attacked and not largest UC use UC Pop
G$realpop <- ifelse(G$part.of.urban.center==TRUE, G$Population, G$realpop)
# if largest C use EN.URB.LCTY.UR
G$realpop <- ifelse((G$part.of.urban.center==FALSE&(G$largestC==1)&(!is.na(G$EN.URB.LCTY))), G$EN.URB.LCTY.UR, G$realpop)
G <-G[order(-G$realpop), ]
# if UC attacked and largest UC  use EN.URB.LCTY.UR
G$realpop <- ifelse((G$part.of.urban.center==TRUE&(!is.na(G$EN.URB.LCTY))), (ifelse(G$largest.UC==1, G$EN.URB.LCTY, G$realpop)),
G$realpop)
#################################
# finding sums in the WC.UC Data  for the 3 categories (largest, UC and rest) we have WDI Data for
G.UC.SUMS <- subset(G, select = c(realpop, country, name, pop, Population, EN.URB.LCTY.UR, EN.URB.MCTY, SP.URB.TOTL,
SP.POP.TOTL, part.of.urban.center, UC), realpop >= 999999)
G.UC.SUMS$name <- ifelse((G.UC.SUMS$part.of.urban.center==TRUE), G.UC.SUMS$UC, G.UC.SUMS$name)
G.UC.SUMS$pop <-NULL
G.UC.SUMS$row.names <-NULL
G.UC.SUMS<-G.UC.SUMS[!duplicated(G.UC.SUMS$realpop),]
G.UC.SUMS2<-aggregate(G.UC.SUMS$realpop, by=list(country=G.UC.SUMS$country), FUN=sum)
G.UC.SUMS2["SUM.fake.MCTY"] <- G.UC.SUMS2$x
G.UC.SUMS2$x <- NULL
G <- merge(G, G.UC.SUMS2, by=c("country"), all.x=TRUE)
rm(G.UC.SUMS2, G.UC.SUMS)
G.SC.SUMS <- subset(G, select = c(realpop, country, name, pop, Population, EN.URB.LCTY.UR, EN.URB.MCTY, SP.URB.TOTL,
SP.POP.TOTL, part.of.urban.center, UC), realpop <= 999999)
G.SC.SUMS$name <- ifelse((G.SC.SUMS$part.of.urban.center==TRUE), G.SC.SUMS$UC, G.SC.SUMS$name)
G.SC.SUMS$pop <-NULL
G.SC.SUMS$row.names <-NULL
G.SC.SUMS<-G.SC.SUMS[!duplicated(G.SC.SUMS$realpop),]
G.SC.SUMS2<-aggregate(G.SC.SUMS$realpop, by=list(country=G.SC.SUMS$country), FUN=sum)
G.SC.SUMS2["SUM.fake.REST"] <- G.SC.SUMS2$x
G.SC.SUMS2$x <- NULL
G <- merge(G, G.SC.SUMS2, by=c("country"), all.x=TRUE)
rm(G.SC.SUMS2, G.SC.SUMS, X)
G["Restpop.WDI"]<- G$SP.URB.TOTL - G$EN.URB.MCTY
G["MCTYpop.WDI"]<- G$EN.URB.MCTY - G$EN.URB.LCTY.UR
# if UC attacked and largest UC  use EN.URB.LCTY.UR
G$realpop <- ifelse((G$part.of.urban.center==TRUE&(!is.na(G$EN.URB.LCTY))),
(ifelse(G$largest.UC==1, G$EN.URB.LCTY, G$realpop)),
G$realpop)
# chaning the size of all cities under 1m inhabitants so the county sum fits the WDI
G$realpop <- ifelse((G$realpop!=G$EN.URB.LCTY)&(G$realpop<=999999)&(!is.na(G$EN.URB.LCTY))&(!is.na(G$SUM.fake.REST))&
(!is.na(G$Restpop.WDI))&(G$SUM.fake.REST!=0), (G$realpop*G$Restpop.WDI/G$SUM.fake.REST), G$realpop)
# chaning the size of all cities over 1m inhabitants so the county sum fits the WDI
G$realpop <- ifelse((G$realpop!=G$EN.URB.LCTY)&(G$realpop>=999999)&(!is.na(G$EN.URB.LCTY))&(!is.na(G$SUM.fake.MCTY))&
(!is.na(G$MCTYpop.WDI))&(G$SUM.fake.REST!=0), (G$realpop*G$MCTYpop.WDI/G$SUM.fake.MCTY), G$realpop)
# bringing it back into the WC.UC.dist
G <-G[order(-G$pop, G$name), ]
WC.UC.dist <-WC.UC.dist[order(-WC.UC.dist$pop, WC.UC.dist$name), ]
WC.UC.dist["org.pop"] <- WC.UC.dist$pop
WC.UC.dist$pop <- G$realpop
WC.UC.dist["old.name"] <- as.character(G$name)
WC.UC.dist$name <- ifelse((G$part.of.urban.center==TRUE), G$UC, G$old.name)
# Country level data from the World Bank Development Indicators (WDI) and the The Correlates of War (COW) project data on wars.
if(file.exists("Cache/CountryData.csv")){CountryData <- read.csv("Cache/CountryData.csv")} else{source("1.b - Country Data.R")}
# City level data from a number of sources, including web scraping
if(file.exists("Cache/WC.UC.dist.csv")) {WC.UC.dist <- read.csv("Cache/WC.UC.dist.csv")} else{source("1.c - City Data.R")}
G <- WC.UC.dist
G["realpop"] <- G$pop
G["year"] <- 2010
G["country"] <- G$country.etc
GM <- merge(G, CountryData, by=c("country", "year"), all.x=TRUE)
G <- subset(GM, select=c(realpop, country, name, capital, pop, largestC, part.of.urban.center, Closest.Urban.Center, largest.UC, Population,
EN.URB.LCTY.UR, EN.URB.MCTY, SP.URB.TOTL,SP.POP.TOTL))
rm(GM)
# UC as city-like name
X <- gsub(".*,","",G$Closest.Urban.Center)
source('SmallScripts/CleanSpecialCharacters.R')
G["UC"] <- X
rm(X)
# if UC attacked and not largest UC use UC Pop
G$realpop <- ifelse(G$part.of.urban.center==TRUE, G$Population, G$realpop)
# if largest C use EN.URB.LCTY.UR
G$realpop <- ifelse((G$part.of.urban.center==FALSE&(G$largestC==1)&(!is.na(G$EN.URB.LCTY))), G$EN.URB.LCTY.UR, G$realpop)
G <-G[order(-G$realpop), ]
# if UC attacked and largest UC  use EN.URB.LCTY.UR
G$realpop <- ifelse((G$part.of.urban.center==TRUE&(!is.na(G$EN.URB.LCTY))), (ifelse(G$largest.UC==1, G$EN.URB.LCTY, G$realpop)),
G$realpop)
#################################
# finding sums in the WC.UC Data  for the 3 categories (largest, UC and rest) we have WDI Data for
G.UC.SUMS <- subset(G, select = c(realpop, country, name, pop, Population, EN.URB.LCTY.UR, EN.URB.MCTY, SP.URB.TOTL,
SP.POP.TOTL, part.of.urban.center, UC), realpop >= 999999)
G.UC.SUMS$name <- ifelse((G.UC.SUMS$part.of.urban.center==TRUE), G.UC.SUMS$UC, G.UC.SUMS$name)
G.UC.SUMS$pop <-NULL
G.UC.SUMS$row.names <-NULL
G.UC.SUMS<-G.UC.SUMS[!duplicated(G.UC.SUMS$realpop),]
G.UC.SUMS2<-aggregate(G.UC.SUMS$realpop, by=list(country=G.UC.SUMS$country), FUN=sum)
G.UC.SUMS2["SUM.fake.MCTY"] <- G.UC.SUMS2$x
G.UC.SUMS2$x <- NULL
G <- merge(G, G.UC.SUMS2, by=c("country"), all.x=TRUE)
rm(G.UC.SUMS2, G.UC.SUMS)
G.SC.SUMS <- subset(G, select = c(realpop, country, name, pop, Population, EN.URB.LCTY.UR, EN.URB.MCTY, SP.URB.TOTL,
SP.POP.TOTL, part.of.urban.center, UC), realpop <= 999999)
G.SC.SUMS$name <- ifelse((G.SC.SUMS$part.of.urban.center==TRUE), G.SC.SUMS$UC, G.SC.SUMS$name)
G.SC.SUMS$pop <-NULL
G.SC.SUMS$row.names <-NULL
G.SC.SUMS<-G.SC.SUMS[!duplicated(G.SC.SUMS$realpop),]
G.SC.SUMS2<-aggregate(G.SC.SUMS$realpop, by=list(country=G.SC.SUMS$country), FUN=sum)
G.SC.SUMS2["SUM.fake.REST"] <- G.SC.SUMS2$x
G.SC.SUMS2$x <- NULL
G <- merge(G, G.SC.SUMS2, by=c("country"), all.x=TRUE)
rm(G.SC.SUMS2, G.SC.SUMS, X)
G["Restpop.WDI"]<- G$SP.URB.TOTL - G$EN.URB.MCTY
G["MCTYpop.WDI"]<- G$EN.URB.MCTY - G$EN.URB.LCTY.UR
# if UC attacked and largest UC  use EN.URB.LCTY.UR
G$realpop <- ifelse((G$part.of.urban.center==TRUE&(!is.na(G$EN.URB.LCTY))),
(ifelse(G$largest.UC==1, G$EN.URB.LCTY, G$realpop)),
G$realpop)
# chaning the size of all cities under 1m inhabitants so the county sum fits the WDI
G$realpop <- ifelse((G$realpop!=G$EN.URB.LCTY)&(G$realpop<=999999)&(!is.na(G$EN.URB.LCTY))&(!is.na(G$SUM.fake.REST))&
(!is.na(G$Restpop.WDI))&(G$SUM.fake.REST!=0), (G$realpop*G$Restpop.WDI/G$SUM.fake.REST), G$realpop)
# chaning the size of all cities over 1m inhabitants so the county sum fits the WDI
G$realpop <- ifelse((G$realpop!=G$EN.URB.LCTY)&(G$realpop>=999999)&(!is.na(G$EN.URB.LCTY))&(!is.na(G$SUM.fake.MCTY))&
(!is.na(G$MCTYpop.WDI))&(G$SUM.fake.REST!=0), (G$realpop*G$MCTYpop.WDI/G$SUM.fake.MCTY), G$realpop)
# bringing it back into the WC.UC.dist
G <-G[order(-G$pop, G$name), ]
WC.UC.dist <-WC.UC.dist[order(-WC.UC.dist$pop, WC.UC.dist$name), ]
WC.UC.dist["org.pop"] <- WC.UC.dist$pop
WC.UC.dist$pop <- G$realpop
WC.UC.dist["old.name"] <- as.character(G$name)
WC.UC.dist$name <- ifelse((G$part.of.urban.center==TRUE), G$UC, G$old.name)
View(G)
G$name <- ifelse((G$part.of.urban.center==TRUE), G$UC, G$old.name)
View(G)
G.SC.SUMS2$x <- NULL
WC.UC.dist["old.name"] <- as.character(WC.UC.dist$name)
G["old.name"] <- as.character(G$name)
G$name <- ifelse((G$part.of.urban.center==TRUE), G$UC, G$old.name)
WC.UC.dist$name <- ifelse((G$part.of.urban.center==TRUE), G$UC, G$old.name)
View(WC.UC.dist)
# Global Terrorism Database (GTD) with some new scales and categories we introduced to the GTD for our purposes
if(file.exists("Cache/GTD.csv")) {GTD <- read.csv("Cache/GTD.csv")} else{source("1.a - Global Terrorism Database.R")}
# Country level data from the World Bank Development Indicators (WDI) and the The Correlates of War (COW) project data on wars.
if(file.exists("Cache/CountryData.csv")){CountryData <- read.csv("Cache/CountryData.csv")} else{source("1.b - Country Data.R")}
# City level data from a number of sources, including web scraping
if(file.exists("Cache/WC.UC.dist.csv")) {WC.UC.dist <- read.csv("Cache/WC.UC.dist.csv")} else{source("1.c - City Data.R")}
###### Merge GTD & Country Level Data ######
GTDWDI <- merge(GTD, CountryData, by.x=c("country_txt", "iyear"), by.y=c("country", "year"), all.x=TRUE, sort=TRUE)
###### Merge Combined set with City Data ######
GTDWDIcity <- GTDWDI$city
GTDWDIcountry <- GTDWDI$country_txt
Cities <- WC.UC.dist$name
Countries <- WC.UC.dist$country.etc
WC.UC.dist["merge"] <- paste(Countries, Cities, sep="")
Testframe <- GTDWDI
Testframe["merge"] <-data.frame(paste(GTDWDIcountry, GTDWDIcity, sep=""))
PreGTD <- merge(Testframe, WC.UC.dist, by=c("merge"), all.x=TRUE)
PreGTD  <- PreGTD [order(-PreGTD$eventid, na.last=TRUE) , ]
View(PreGTD)
#############################################################################################################
################################################ 4. Manitulating  ###########################################
#############################################################################################################
# Country level data from the World Bank Development Indicators (WDI) and the The Correlates of War (COW) project data on wars.
if(file.exists("Cache/CountryData.csv")){CountryData <- read.csv("Cache/CountryData.csv")} else{source("1.b - Country Data.R")}
# City level data from a number of sources, including web scraping
if(file.exists("Cache/WC.UC.dist.csv")) {WC.UC.dist <- read.csv("Cache/WC.UC.dist.csv")} else{source("1.c - City Data.R")}
G <- WC.UC.dist
G["realpop"] <- G$pop
G["year"] <- 2010
G["country"] <- G$country.etc
GM <- merge(G, CountryData, by=c("country", "year"), all.x=TRUE)
G <- subset(GM, select=c(realpop, country, name, capital, pop, largestC, part.of.urban.center, Closest.Urban.Center, largest.UC, Population,
EN.URB.LCTY.UR, EN.URB.MCTY, SP.URB.TOTL,SP.POP.TOTL))
rm(GM)
# UC as city-like name
X <- gsub(".*,","",G$Closest.Urban.Center)
source('SmallScripts/CleanSpecialCharacters.R')
G["UC"] <- X
rm(X)
# if UC attacked and not largest UC use UC Pop
G$realpop <- ifelse(G$part.of.urban.center==TRUE, G$Population, G$realpop)
# if largest C use EN.URB.LCTY.UR
G$realpop <- ifelse((G$part.of.urban.center==FALSE&(G$largestC==1)&(!is.na(G$EN.URB.LCTY))), G$EN.URB.LCTY.UR, G$realpop)
G <-G[order(-G$realpop), ]
# if UC attacked and largest UC  use EN.URB.LCTY.UR
G$realpop <- ifelse((G$part.of.urban.center==TRUE&(!is.na(G$EN.URB.LCTY))), (ifelse(G$largest.UC==1, G$EN.URB.LCTY, G$realpop)),
G$realpop)
#################################
# finding sums in the WC.UC Data  for the 3 categories (largest, UC and rest) we have WDI Data for
G.UC.SUMS <- subset(G, select = c(realpop, country, name, pop, Population, EN.URB.LCTY.UR, EN.URB.MCTY, SP.URB.TOTL,
SP.POP.TOTL, part.of.urban.center, UC), realpop >= 999999)
G.UC.SUMS$name <- ifelse((G.UC.SUMS$part.of.urban.center==TRUE), G.UC.SUMS$UC, G.UC.SUMS$name)
G.UC.SUMS$pop <-NULL
G.UC.SUMS$row.names <-NULL
G.UC.SUMS<-G.UC.SUMS[!duplicated(G.UC.SUMS$realpop),]
G.UC.SUMS2<-aggregate(G.UC.SUMS$realpop, by=list(country=G.UC.SUMS$country), FUN=sum)
G.UC.SUMS2["SUM.fake.MCTY"] <- G.UC.SUMS2$x
G.UC.SUMS2$x <- NULL
G <- merge(G, G.UC.SUMS2, by=c("country"), all.x=TRUE)
rm(G.UC.SUMS2, G.UC.SUMS)
G.SC.SUMS <- subset(G, select = c(realpop, country, name, pop, Population, EN.URB.LCTY.UR, EN.URB.MCTY, SP.URB.TOTL,
SP.POP.TOTL, part.of.urban.center, UC), realpop <= 999999)
G.SC.SUMS$name <- ifelse((G.SC.SUMS$part.of.urban.center==TRUE), G.SC.SUMS$UC, G.SC.SUMS$name)
G.SC.SUMS$pop <-NULL
G.SC.SUMS$row.names <-NULL
G.SC.SUMS<-G.SC.SUMS[!duplicated(G.SC.SUMS$realpop),]
G.SC.SUMS2<-aggregate(G.SC.SUMS$realpop, by=list(country=G.SC.SUMS$country), FUN=sum)
G.SC.SUMS2["SUM.fake.REST"] <- G.SC.SUMS2$x
G.SC.SUMS2$x <- NULL
G <- merge(G, G.SC.SUMS2, by=c("country"), all.x=TRUE)
rm(G.SC.SUMS2, G.SC.SUMS, X)
G["Restpop.WDI"]<- G$SP.URB.TOTL - G$EN.URB.MCTY
G["MCTYpop.WDI"]<- G$EN.URB.MCTY - G$EN.URB.LCTY.UR
# if UC attacked and largest UC  use EN.URB.LCTY.UR
G$realpop <- ifelse((G$part.of.urban.center==TRUE&(!is.na(G$EN.URB.LCTY))),
(ifelse(G$largest.UC==1, G$EN.URB.LCTY, G$realpop)),
G$realpop)
# chaning the size of all cities under 1m inhabitants so the county sum fits the WDI
G$realpop <- ifelse((G$realpop!=G$EN.URB.LCTY)&(G$realpop<=999999)&(!is.na(G$EN.URB.LCTY))&(!is.na(G$SUM.fake.REST))&
(!is.na(G$Restpop.WDI))&(G$SUM.fake.REST!=0), (G$realpop*G$Restpop.WDI/G$SUM.fake.REST), G$realpop)
# chaning the size of all cities over 1m inhabitants so the county sum fits the WDI
G$realpop <- ifelse((G$realpop!=G$EN.URB.LCTY)&(G$realpop>=999999)&(!is.na(G$EN.URB.LCTY))&(!is.na(G$SUM.fake.MCTY))&
(!is.na(G$MCTYpop.WDI))&(G$SUM.fake.REST!=0), (G$realpop*G$MCTYpop.WDI/G$SUM.fake.MCTY), G$realpop)
# bringing it back into the WC.UC.dist
G <-G[order(-G$pop, G$name), ]
WC.UC.dist <-WC.UC.dist[order(-WC.UC.dist$pop, WC.UC.dist$name), ]
WC.UC.dist["org.pop"] <- WC.UC.dist$pop
WC.UC.dist$pop <- G$realpop
WC.UC.dist["old.name"] <- as.character(WC.UC.dist$name)
G["old.name"] <- as.character(G$name)
G$name <- ifelse((G$part.of.urban.center==TRUE), G$UC, G$old.name)
WC.UC.dist$name <- ifelse((G$part.of.urban.center==TRUE), G$UC, G$old.name)
rm(G)
#write csv
write.csv(WC.UC.dist, "Cache/WC.UC.dist.csv")
###### Merge GTD & Country Level Data ######
GTDWDI <- merge(GTD, CountryData, by.x=c("country_txt", "iyear"), by.y=c("country", "year"), all.x=TRUE, sort=TRUE)
###### Merge Combined set with City Data ######
GTDWDIcity <- GTDWDI$city
GTDWDIcountry <- GTDWDI$country_txt
Cities <- WC.UC.dist$name
Countries <- WC.UC.dist$country.etc
WC.UC.dist["merge"] <- paste(Countries, Cities, sep="")
Testframe <- GTDWDI
Testframe["merge"] <-data.frame(paste(GTDWDIcountry, GTDWDIcity, sep=""))
PreGTD <- merge(Testframe, WC.UC.dist, by=c("merge"), all.x=TRUE)
PreGTD  <- PreGTD [order(-PreGTD$eventid, na.last=TRUE) , ]
# Global Terrorism Database (GTD) with some new scales and categories we introduced to the GTD for our purposes
if(file.exists("Cache/GTD.csv")) {GTD <- read.csv("Cache/GTD.csv")} else{source("1.a - Global Terrorism Database.R")}
# Country level data from the World Bank Development Indicators (WDI) and the The Correlates of War (COW) project data on wars.
if(file.exists("Cache/CountryData.csv")){CountryData <- read.csv("Cache/CountryData.csv")} else{source("1.b - Country Data.R")}
# City level data from a number of sources, including web scraping
if(file.exists("Cache/WC.UC.dist.csv")) {WC.UC.dist <- read.csv("Cache/WC.UC.dist.csv")} else{source("1.c - City Data.R")}
###### Merge GTD & Country Level Data ######
GTDWDI <- merge(GTD, CountryData, by.x=c("country_txt", "iyear"), by.y=c("country", "year"), all.x=TRUE, sort=TRUE)
###### Merge Combined set with City Data ######
GTDWDIcity <- GTDWDI$city
GTDWDIcountry <- GTDWDI$country_txt
Cities <- WC.UC.dist$name
Countries <- WC.UC.dist$country.etc
WC.UC.dist["merge"] <- paste(Countries, Cities, sep="")
Testframe <- GTDWDI
Testframe["merge"] <-data.frame(paste(GTDWDIcountry, GTDWDIcity, sep=""))
PreGTD <- merge(Testframe, WC.UC.dist, by=c("merge"), all.x=TRUE)
PreGTD  <- PreGTD [order(-PreGTD$eventid, na.last=TRUE) , ]
View(WC.UC.dist)
View(PreGTD)
PreGTD <- subset(PreGTD, select=c(eventid, merge, iyear, city, old.name pop, org.pop, capital, region_txt, largestC, Closest.Urban.Center, Population,
largest.UC, coastalMC, WC.UC.dist.km, part.of.urban.center, in.urban.centers.environment, attacktype1,
targtype1, targsubtype1, weaptype1, weapsubtype1, TUPscale, PROPscale, HUMscale, SP.POP.TOTL,
EN.URB.LCTY.UR, MAX.URB.LCTY.UR, EN.URB.MCTY, MAX.URB.MCTY, SP.URB.TOTL, MAX.URB.TOTL,
EN.POP.DNST, Extra.WAR.In, Extra.WAR.Out, Intra.WAR, Inter.WAR))
PreGTD$part.of.urban.center[is.na(PreGTD$part.of.urban.center)] <- FALSE
PreGTD$in.urban.centers.environment[is.na(PreGTD$in.urban.centers.environment)] <- FALSE
PreGTD$in.urban.centers.environment <- recode(PreGTD$in.urban.centers.environment, "TRUE=1")
PreGTD$part.of.urban.center <- recode(PreGTD$part.of.urban.center, "TRUE=1")
PreGTD$capital[is.na(PreGTD$capital)] <- 0
PreGTD$largestC[is.na(PreGTD$largestC)] <- 0
PreGTD$largest.UC[is.na(PreGTD$largest.UC)] <- 0
PreGTD$coastalMC[is.na(PreGTD$coastalMC)] <- 0
PreGTD$pop[is.na(PreGTD$pop)] <- 0
write.csv(PreGTD, file="TerrorData/Pregtd.csv")
rm(Testframe, GTDWDIcity, GTDWDIcountry, Cities, GTD, Countries, GTDWDI)
write.csv(PreGTD, file="TerrorData/Pregtd.csv")
# Global Terrorism Database (GTD) with some new scales and categories we introduced to the GTD for our purposes
if(file.exists("Cache/GTD.csv")) {GTD <- read.csv("Cache/GTD.csv")} else{source("1.a - Global Terrorism Database.R")}
# Country level data from the World Bank Development Indicators (WDI) and the The Correlates of War (COW) project data on wars.
if(file.exists("Cache/CountryData.csv")){CountryData <- read.csv("Cache/CountryData.csv")} else{source("1.b - Country Data.R")}
# City level data from a number of sources, including web scraping
if(file.exists("Cache/WC.UC.dist.csv")) {WC.UC.dist <- read.csv("Cache/WC.UC.dist.csv")} else{source("1.c - City Data.R")}
#############################################################################################################
############################# Merge the Data Sets into a "PreGTD"###########################################
#############################################################################################################
###### Merge GTD & Country Level Data ######
GTDWDI <- merge(GTD, CountryData, by.x=c("country_txt", "iyear"), by.y=c("country", "year"), all.x=TRUE, sort=TRUE)
###### Merge Combined set with City Data ######
GTDWDIcity <- GTDWDI$city
GTDWDIcountry <- GTDWDI$country_txt
Cities <- WC.UC.dist$name
Countries <- WC.UC.dist$country.etc
WC.UC.dist["merge"] <- paste(Countries, Cities, sep="")
Testframe <- GTDWDI
Testframe["merge"] <-data.frame(paste(GTDWDIcountry, GTDWDIcity, sep=""))
PreGTD <- merge(Testframe, WC.UC.dist, by=c("merge"), all.x=TRUE)
PreGTD  <- PreGTD [order(-PreGTD$eventid, na.last=TRUE) , ]
PreGTD <- subset(PreGTD, select=c(eventid, merge, iyear, city, old.name, pop, org.pop, capital, region_txt, largestC, Closest.Urban.Center, Population,
largest.UC, coastalMC, WC.UC.dist.km, part.of.urban.center, in.urban.centers.environment, attacktype1,
targtype1, targsubtype1, weaptype1, weapsubtype1, TUPscale, PROPscale, HUMscale, SP.POP.TOTL,
EN.URB.LCTY.UR, MAX.URB.LCTY.UR, EN.URB.MCTY, MAX.URB.MCTY, SP.URB.TOTL, MAX.URB.TOTL,
EN.POP.DNST, Extra.WAR.In, Extra.WAR.Out, Intra.WAR, Inter.WAR))
PreGTD$part.of.urban.center[is.na(PreGTD$part.of.urban.center)] <- FALSE
PreGTD$in.urban.centers.environment[is.na(PreGTD$in.urban.centers.environment)] <- FALSE
PreGTD$in.urban.centers.environment <- recode(PreGTD$in.urban.centers.environment, "TRUE=1")
PreGTD$part.of.urban.center <- recode(PreGTD$part.of.urban.center, "TRUE=1")
PreGTD$capital[is.na(PreGTD$capital)] <- 0
PreGTD$largestC[is.na(PreGTD$largestC)] <- 0
PreGTD$largest.UC[is.na(PreGTD$largest.UC)] <- 0
PreGTD$coastalMC[is.na(PreGTD$coastalMC)] <- 0
PreGTD$pop[is.na(PreGTD$pop)] <- 0
write.csv(PreGTD, file="TerrorData/Pregtd.csv")
rm(Testframe, GTDWDIcity, GTDWDIcountry, Cities, GTD, Countries, GTDWDI)
# selecting non-capital, non-military atacks
PreGTD2 <- subset(PreGTD, capital ==!1 & (TUPscale == 5 |TUPscale == 7 | TUPscale == 9))
PreGTD2$SP.URB.TOTL <- as.numeric(PreGTD2$SP.URB.TOTL)
PreGTD2$MAX.URB.TOTL <- as.numeric(PreGTD2$MAX.URB.TOTL)
PreGTD2$pop <- as.numeric(PreGTD2$pop)
# prepare for regression
PreGTD2["year"] <- as.numeric(PreGTD2$iyear)
PreGTD2["city.population_2013"] <- PreGTD2$pop
PreGTD2["city.population_at.attack.time_liniear.grown"] <- ((PreGTD2$pop)*(PreGTD2$SP.URB.TOTL)/(PreGTD2$MAX.URB.TOTL))
PreGTD2["Citysize_relative_to_nations_Largest" ] <- as.numeric(PreGTD2$city.population_at.attack.time_liniear.grown/PreGTD2$EN.URB.LCTY.UR)
PreGTD2["PROPscale" ]<-as.numeric(PreGTD2$PROPscale)
PreGTD2["HUMscale" ]<-as.numeric(PreGTD2$HUMscale)
PreGTD2["Distance to Urban Center (km)"]<-as.numeric(PreGTD2$WC.UC.dist.km)
PreGTD2["weightGTD"] <- as.numeric((PreGTD2$HUMscale^(1/2))+(PreGTD2$PROPscale/(PreGTD2$PROPscale+1)+1))
PreGTD2$Citysize_relative_to_nations_Largest[is.na(PreGTD2$Citysize_relative_to_nations_Largest)] <- 0
PreGTD2$weightGTD[is.na(PreGTD2$weightGTD)] <- 0
# linear regression of Citysize_relative_to_nations_Largest over time
Linear1 <- lm(Citysize_relative_to_nations_Largest ~ year, weight=weightGTD, data=PreGTD2)
stargazer(Linear1, type="latex", out="Analysis Test/Linear Regression of realtive city size.html")
View(PreGTD2)
PreGTD2 <- PreGTD2[order(-eventid),]
PreGTD2 <- PreGTD2[order(-PreGTD2$eventid),]
View(PreGTD2)
View(PreGTD2)
View(WC.UC.dist)
View(PreGTD2)
View(WC.UC.dist)
View(PreGTD)
View(WC.UC.dist)
# MPP-E1180: Introduction to Collaborative Social Science Data Analysis
### Fall 2014
### Instructor: Christopher Gandrud
##############################################
############## URBAN TERROR ##################
##############################################
###############  Part 1: DATA   ##############
##############################################
##########Lukas B Cameron R Sascha S##########
##############################################
####### Gathering, Cleaning, Merging #########
##############################################
# In this script we combine all our previously established databases into one, bringing together
# terror data, country level data and city level data into one database ready for analysis.
#############################################################################################################
################### Loading Datasets previously gathered, cleaned and partially merged ######################
#############################################################################################################
# Global Terrorism Database (GTD) with some new scales and categories we introduced to the GTD for our purposes
if(file.exists("Cache/GTD.csv")) {GTD <- read.csv("Cache/GTD.csv")} else{source("1.a - Global Terrorism Database.R")}
# Global Terrorism Database (GTD) with some new scales and categories we introduced to the GTD for our purposes
if(file.exists("Cache/GTD.csv")) {GTD <- read.csv("Cache/GTD.csv")} else{source("1.a - Global Terrorism Database.R")}
# Country level data from the World Bank Development Indicators (WDI) and the The Correlates of War (COW) project data on wars.
if(file.exists("Cache/CountryData.csv")){CountryData <- read.csv("Cache/CountryData.csv")} else{source("1.b - Country Data.R")}
View(CountryData)
if(file.exists("Cache/WC.UC.dist.csv")) {WC.UC.dist <- read.csv("Cache/WC.UC.dist.csv")} else{source("1.c - City Data.R")}
