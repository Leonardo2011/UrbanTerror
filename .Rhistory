G <- merge(G, G.SC.SUMS2, by=c("country"), all.x=TRUE)
G["Restpop.WDI"]<- G$SP.URB.TOTL - G$EN.URB.MCTY
G["MCTYpop.WDI"]<- G$EN.URB.MCTY - G$EN.URB.LCTY.UR
View(G)
# chaning the size of all cities under 1m inhabitants so the county sum fits the WDI
G$realpop <- ifelse((G$realpop!=G$EN.URB.LCTY)&(G$realpop<=999999)&(!is.na(G$EN.URB.LCTY))&(!is.na(G$SUM.fake.REST))&
(!is.na(G$Restpop.WDI))&(G$Restpop.WDI!=0)&(G$SUM.fake.REST!=0), (G$realpop*G$Restpop.WDI/G$SUM.fake.REST), G$realpop)
# chaning the size of all cities over 1m inhabitants so the county sum fits the WDI
G$realpop <- ifelse((G$realpop!=G$EN.URB.LCTY)&(G$realpop>=999999)&(!is.na(G$EN.URB.LCTY))&(!is.na(G$SUM.fake.MCTY))&
(!is.na(G$MCTYpop.WDI))&(G$MCTYpop.WDI!=0)&(G$SUM.fake.REST!=0), (G$realpop*G$MCTYpop.WDI/G$SUM.fake.MCTY), G$realpop)
# bringing it back into the WC.UC.dist
G <-G[order(-G$pop, G$name), ]
WC.UC.dist <-WC.UC.dist[order(-WC.UC.dist$pop, WC.UC.dist$name), ]
WC.UC.dist["old.pop"] <- WC.UC.dist$pop
WC.UC.dist$pop <- G$realpop
WC.UC.dist["old.name"] <- as.character(WC.UC.dist$name)
G["old.name"] <- as.character(G$name)
G$name <- ifelse((G$part.of.urban.center==TRUE), G$UC, G$old.name)
WC.UC.dist$name <- ifelse((G$part.of.urban.center==TRUE), G$UC, G$old.name)
rm(G.SC.SUMS2, G.SC.SUMS)
rm(G)
View(WC.UC.dist)
write.csv(WC.UC.dist, "Cache/WC.UC.dist.csv")
###### Merge GTD & Country Level Data ######
GTDWDI <- merge(GTD, CountryData, by.x=c("country_txt", "iyear"), by.y=c("country", "year"), all.x=TRUE, sort=TRUE)
###### Merge Combined set with City Data ######
GTDWDIcity <- GTDWDI$city
GTDWDIcountry <- GTDWDI$country_txt
Cities <- WC.UC.dist$old.name
Countries <- WC.UC.dist$country.etc
WC.UC.dist["merge"] <- paste(Countries, Cities, sep="")
WC.UC.dist <- WC.UC.dist[order(WC.UC.dist$merge, WC.UC.dist$capital, -WC.UC.dist$pop),]
WC.UC.dist <- WC.UC.dist[!duplicated(WC.UC.dist$merge), ]
Testframe <- GTDWDI
Testframe["merge"] <-data.frame(paste(GTDWDIcountry, GTDWDIcity, sep=""))
PreGTD <- merge(Testframe, WC.UC.dist, by=c("merge"), all.x=TRUE)
PreGTD  <- PreGTD [order(-PreGTD$HUMscale, na.last=TRUE) , ]
source('SmallScripts/dynamic_n_relative_CitySize.R')
# limit and order the new PreGTD
PreGTD <- subset(PreGTD, select=c(eventid, merge, year, imonth, iday, city, old.name, pop, Rel.CS,  capital, largestC, part.of.urban.center,
Closest.Urban.Center,largest.UC, coastalMC, WC.UC.dist.km, attacktype1,targtype1, targsubtype1, weaptype1, weapsubtype1,
TUPscale, PROPscale, HUMscale, Extra.WAR.In, Extra.WAR.Out, Intra.WAR, Inter.WAR, old.pop, pop.today))
# write a csv, just to be sure
write.csv(PreGTD, file="TerrorData/Pregtd.csv")
if(file.exists("Cache/GTD.csv")) {GTD <- read.csv("Cache/GTD.csv")} else{source("1.a - Global Terrorism Database.R")}
##### Merge GTD & Country Level Data ######
GTDWDI <- merge(GTD, CountryData, by.x=c("country_txt", "iyear"), by.y=c("country", "year"), all.x=TRUE, sort=TRUE)
###### Merge Combined set with City Data ######
GTDWDIcity <- GTDWDI$city
GTDWDIcountry <- GTDWDI$country_txt
Cities <- WC.UC.dist$old.name
Countries <- WC.UC.dist$country.etc
WC.UC.dist["merge"] <- paste(Countries, Cities, sep="")
WC.UC.dist <- WC.UC.dist[order(WC.UC.dist$merge, WC.UC.dist$capital, -WC.UC.dist$pop),]
WC.UC.dist <- WC.UC.dist[!duplicated(WC.UC.dist$merge), ]
Testframe <- GTDWDI
Testframe["merge"] <-data.frame(paste(GTDWDIcountry, GTDWDIcity, sep=""))
PreGTD <- merge(Testframe, WC.UC.dist, by=c("merge"), all.x=TRUE)
PreGTD  <- PreGTD [order(-PreGTD$HUMscale, na.last=TRUE) , ]
source('SmallScripts/dynamic_n_relative_CitySize.R')
# limit and order the new PreGTD
PreGTD <- subset(PreGTD, select=c(eventid, merge, year, imonth, iday, city, old.name, pop, Rel.CS,  capital, largestC, part.of.urban.center,
Closest.Urban.Center,largest.UC, coastalMC, WC.UC.dist.km, attacktype1,targtype1, targsubtype1, weaptype1, weapsubtype1,
TUPscale, PROPscale, HUMscale, Extra.WAR.In, Extra.WAR.Out, Intra.WAR, Inter.WAR, old.pop, pop.today))
# write a csv, just to be sure
write.csv(PreGTD, file="TerrorData/Pregtd.csv")
View(PreGTD)
summarize(PreGTD$Rel.CS)
PreGTD$Rel.CS
?PreGTD$Rel.CS
?(PreGTD$Rel.CS)
info(PreGTD$Rel.CS)
summarize(PreGTD$Rel.CS)
summary(PreGTD$Rel.CS)
# Global Terrorism Database (GTD) with some new scales and categories we introduced to the GTD for our purposes
if(file.exists("Cache/GTD.csv")) {GTD <- read.csv("Cache/GTD.csv")} else{source("1.a - Global Terrorism Database.R")}
# Country level data from the World Bank Development Indicators (WDI) and the The Correlates of War (COW) project data on wars.
if(file.exists("Cache/CountryData.csv")){CountryData <- read.csv("Cache/CountryData.csv")} else{source("1.b - Country Data.R")}
# City level data from a number of sources, including web scraping
if(file.exists("Cache/WC.UC.dist.csv")) {WC.UC.dist <- read.csv("Cache/WC.UC.dist.csv")} else{source("1.c - City Data.R")}
#############################################################################################################
############################# Merge the Data Sets into a "PreGTD"###########################################
#############################################################################################################
###### Merge GTD & Country Level Data ######
GTDWDI <- merge(GTD, CountryData, by.x=c("country_txt", "iyear"), by.y=c("country", "year"), all.x=TRUE, sort=TRUE)
###### Merge Combined set with City Data ######
GTDWDIcity <- GTDWDI$city
GTDWDIcountry <- GTDWDI$country_txt
Cities <- WC.UC.dist$old.name
Countries <- WC.UC.dist$country.etc
WC.UC.dist["merge"] <- paste(Countries, Cities, sep="")
WC.UC.dist <- WC.UC.dist[order(WC.UC.dist$merge, WC.UC.dist$capital, -WC.UC.dist$pop),]
WC.UC.dist <- WC.UC.dist[!duplicated(WC.UC.dist$merge), ]
Testframe <- GTDWDI
Testframe["merge"] <-data.frame(paste(GTDWDIcountry, GTDWDIcity, sep=""))
PreGTD <- merge(Testframe, WC.UC.dist, by=c("merge"), all.x=TRUE)
PreGTD  <- PreGTD [order(-PreGTD$HUMscale, na.last=TRUE) , ]
# minor cleaning
PreGTD$part.of.urban.center[is.na(PreGTD$part.of.urban.center)] <- FALSE
PreGTD$in.urban.centers.environment[is.na(PreGTD$in.urban.centers.environment)] <- FALSE
PreGTD$in.urban.centers.environment <- recode(PreGTD$in.urban.centers.environment, "TRUE=1")
PreGTD$part.of.urban.center <- recode(PreGTD$part.of.urban.center, "TRUE=1")
PreGTD$capital[is.na(PreGTD$capital)] <- 0
PreGTD$largestC[is.na(PreGTD$largestC)] <- 0
PreGTD$largest.UC[is.na(PreGTD$largest.UC)] <- 0
PreGTD$coastalMC[is.na(PreGTD$coastalMC)] <- 0
PreGTD$pop[is.na(PreGTD$pop)] <- 0
PreGTD$HUMscale[is.na(PreGTD$HUMscale)] <- 0
PreGTD$TUPscale[is.na(PreGTD$TUPscale)] <- 0
G2<-PreGTD
G2$SP.URB.TOTL <- as.numeric(G2$SP.URB.TOTL )
G2$MAX.URB.TOTL <- as.numeric(G2$MAX.URB.TOTL)
G2$EN.URB.MCTY <- as.numeric(G2$EN.URB.MCTY)
G2$MAX.URB.MCTY <- as.numeric(G2$MAX.URB.MCTY)
G2$EN.URB.LCTY.UR <- as.numeric(G2$EN.URB.LCTY.UR)
G2$MAX.URB.LCTY.UR <- as.numeric(G2$MAX.URB.LCTY.UR)
G2$pop <- as.numeric(G2$pop)
# prepare for regression
G2["year"] <- as.numeric(G2$iyear)
G2 <- G2[order(-G2$pop),]
G2["pop.today"] <- G2$pop
#in case we only have URB.POP numers, we assume that all cities grew with that
G2["city.population_with_time"] <- ifelse(!is.na(G2$SP.URB.TOTL), G2$pop.today*G2$SP.URB.TOTL/G2$MAX.URB.TOTL, G2$pop.today)
# if it is the largest city, EN.URB.LCTY.UR is the size
G2$city.population_with_time <-ifelse(G2$part.of.urban.center==FALSE
& G2$pop.today>=999999
& G2$largestC==1
& !is.na(G2$EN.URB.LCTY.UR)|
G2$part.of.urban.center==1
& G2$largest.UC==1
& !is.na(G2$EN.URB.LCTY.UR), G2$EN.URB.LCTY.UR, G2$city.population_with_time)
# if it is a city with more than 1mil, EN.URB.MCTY-EN.URB.LCTY.UR is the size
G2$city.population_with_time <- ifelse(G2$city.population_with_time!=G2$EN.URB.LCTY.UR
& G2$pop.today>=999999
& G2$EN.URB.LCTY.UR >= G2$EN.URB.MCTY
& G2$MAX.URB.LCTY.UR >= G2$MAX.URB.MCTY
& !is.na(G2$EN.URB.MCTY)
& !is.na(G2$EN.URB.LCTY.UR)
& !is.na(G2$MAX.URB.MCTY)
& !is.na(G2$MAX.URB.LCTY.UR)
& G2$MAX.URB.MCTY!=0,
((G2$EN.URB.MCTY-G2$EN.URB.LCTY.UR)/
(G2$MAX.URB.MCTY-G2$MAX.URB.LCTY.UR)
*G2$city.population_with_time), (G2$city.population_with_time))
# if it is a city with less than 1mil, SP.URB.TOTL-EN.URB.MCTY is the size
G2$city.population_with_time <- ifelse(G2$city.population_with_time!=G2$EN.URB.LCTY.UR
& G2$pop.today<=999999
& G2$EN.URB.MCTY >= G2$SP.URB.TOTL
& G2$MAX.URB.MCTY >= G2$MAX.URB.TOTL
& !is.na(G2$EN.URB.MCTY)
& !is.na(G2$MAX.URB.MCTY)
& !is.na(G2$MAX.URB.TOTL)
& G2$MAX.URB.TOTL!=0
& G2$MAX.URB.MCTY!=0
& !is.na(G2$EN.URB.LCTY.UR)
& !is.na(G2$SP.URB.TOTL),  ((G2$SP.URB.TOTL-G2$EN.URB.MCTY)/
(G2$MAX.URB.TOTL-G2$MAX.URB.MCTY)
*G2$city.population_with_time), (G2$city.population_with_time))
G2$pop <-  round(G2$city.population_with_time)
G2["Rel.CS"] <- G2$pop/G2$EN.URB.LCTY.UR
G2$Rel.CS <- ifelse(G2$Rel.CS>=1, 1, G2$Rel.CS)
G2$Rel.CS[which(is.nan(G2$Rel.CS))] <- NA
G2$Rel.CS[which(is.na(G2$Rel.CS))] <- NA
PreGTD <- G2
rm(G2)
summary(PreGTD$Rel.CS)
# limit and order the new PreGTD
PreGTD <- subset(PreGTD, select=c(eventid, merge, year, imonth, iday, city, old.name, pop, Rel.CS,  capital, largestC, part.of.urban.center,
Closest.Urban.Center,largest.UC, coastalMC, WC.UC.dist.km, attacktype1,targtype1, targsubtype1, weaptype1, weapsubtype1,
TUPscale, PROPscale, HUMscale, Extra.WAR.In, Extra.WAR.Out, Intra.WAR, Inter.WAR, old.pop, pop.today))
# write a csv, just to be sure
write.csv(PreGTD, file="TerrorData/Pregtd.csv")
#############################################################################################################
################### Loading Datasets previously gathered, cleaned and partially merged ######################
#############################################################################################################
# Global Terrorism Database (GTD) with some new scales and categories we introduced to the GTD for our purposes
if(file.exists("Cache/GTD.csv")) {GTD <- read.csv("Cache/GTD.csv")} else{source("1.a - Global Terrorism Database.R")}
# Country level data from the World Bank Development Indicators (WDI) and the The Correlates of War (COW) project data on wars.
if(file.exists("Cache/CountryData.csv")){CountryData <- read.csv("Cache/CountryData.csv")} else{source("1.b - Country Data.R")}
# City level data from a number of sources, including web scraping
if(file.exists("Cache/WC.UC.dist.csv")) {WC.UC.dist <- read.csv("Cache/WC.UC.dist.csv")} else{source("1.c - City Data.R")}
#############################################################################################################
############################# Merge the Data Sets into a "PreGTD"###########################################
#############################################################################################################
###### Merge GTD & Country Level Data ######
GTDWDI <- merge(GTD, CountryData, by.x=c("country_txt", "iyear"), by.y=c("country", "year"), all.x=TRUE, sort=TRUE)
###### Merge Combined set with City Data ######
GTDWDIcity <- GTDWDI$city
GTDWDIcountry <- GTDWDI$country_txt
Cities <- WC.UC.dist$old.name
Countries <- WC.UC.dist$country.etc
WC.UC.dist["merge"] <- paste(Countries, Cities, sep="")
WC.UC.dist <- WC.UC.dist[order(WC.UC.dist$merge, WC.UC.dist$capital, -WC.UC.dist$pop),]
WC.UC.dist <- WC.UC.dist[!duplicated(WC.UC.dist$merge), ]
Testframe <- GTDWDI
Testframe["merge"] <-data.frame(paste(GTDWDIcountry, GTDWDIcity, sep=""))
PreGTD <- merge(Testframe, WC.UC.dist, by=c("merge"), all.x=TRUE)
PreGTD  <- PreGTD [order(-PreGTD$HUMscale, na.last=TRUE) , ]
source('SmallScripts/dynamic_n_relative_CitySize.R')
# limit and order the new PreGTD
PreGTD <- subset(PreGTD, select=c(eventid, merge, year, imonth, iday, city, old.name, pop, Rel.CS, EN.URB.LCTY.UR,  capital, largestC, part.of.urban.center,
Closest.Urban.Center,largest.UC, coastalMC, WC.UC.dist.km, attacktype1,targtype1, targsubtype1, weaptype1, weapsubtype1,
TUPscale, PROPscale, HUMscale, Extra.WAR.In, Extra.WAR.Out, Intra.WAR, Inter.WAR, old.pop, pop.today))
# write a csv, just to be sure
write.csv(PreGTD, file="TerrorData/Pregtd.csv")
#############################################################################################################
################### Loading Datasets previously gathered, cleaned and partially merged ######################
#############################################################################################################
# Global Terrorism Database (GTD) with some new scales and categories we introduced to the GTD for our purposes
if(file.exists("Cache/GTD.csv")) {GTD <- read.csv("Cache/GTD.csv")} else{source("1.a - Global Terrorism Database.R")}
# Country level data from the World Bank Development Indicators (WDI) and the The Correlates of War (COW) project data on wars.
if(file.exists("Cache/CountryData.csv")){CountryData <- read.csv("Cache/CountryData.csv")} else{source("1.b - Country Data.R")}
# City level data from a number of sources, including web scraping
if(file.exists("Cache/WC.UC.dist.csv")) {WC.UC.dist <- read.csv("Cache/WC.UC.dist.csv")} else{source("1.c - City Data.R")}
#############################################################################################################
############################# Merge the Data Sets into a "PreGTD"###########################################
#############################################################################################################
###### Merge GTD & Country Level Data ######
GTDWDI <- merge(GTD, CountryData, by.x=c("country_txt", "iyear"), by.y=c("country", "year"), all.x=TRUE, sort=TRUE)
###### Merge Combined set with City Data ######
GTDWDIcity <- GTDWDI$city
GTDWDIcountry <- GTDWDI$country_txt
Cities <- WC.UC.dist$old.name
Countries <- WC.UC.dist$country.etc
WC.UC.dist["merge"] <- paste(Countries, Cities, sep="")
WC.UC.dist <- WC.UC.dist[order(WC.UC.dist$merge, WC.UC.dist$capital, -WC.UC.dist$pop),]
WC.UC.dist <- WC.UC.dist[!duplicated(WC.UC.dist$merge), ]
Testframe <- GTDWDI
Testframe["merge"] <-data.frame(paste(GTDWDIcountry, GTDWDIcity, sep=""))
PreGTD <- merge(Testframe, WC.UC.dist, by=c("merge"), all.x=TRUE)
PreGTD  <- PreGTD [order(-PreGTD$HUMscale, na.last=TRUE) , ]
source('SmallScripts/dynamic_n_relative_CitySize.R')
# limit and order the new PreGTD
PreGTD <- subset(PreGTD, select=c(eventid, merge, year, imonth, iday, city, old.name, pop, Rel.CS, EN.URB.LCTY.UR,  capital, largestC, part.of.urban.center,
Closest.Urban.Center,largest.UC, coastalMC, WC.UC.dist.km, attacktype1,targtype1, targsubtype1, weaptype1, weapsubtype1,
TUPscale, PROPscale, HUMscale, Extra.WAR.In, Extra.WAR.Out, Intra.WAR, Inter.WAR, old.pop, pop.today))
# write a csv, just to be sure
write.csv(PreGTD, file="TerrorData/Pregtd.csv")
#############################################################################################################
################### Loading Datasets previously gathered, cleaned and partially merged ######################
#############################################################################################################
# Global Terrorism Database (GTD) with some new scales and categories we introduced to the GTD for our purposes
if(file.exists("Cache/GTD.csv")) {GTD <- read.csv("Cache/GTD.csv")} else{source("1.a - Global Terrorism Database.R")}
# Country level data from the World Bank Development Indicators (WDI) and the The Correlates of War (COW) project data on wars.
if(file.exists("Cache/CountryData.csv")){CountryData <- read.csv("Cache/CountryData.csv")} else{source("1.b - Country Data.R")}
# City level data from a number of sources, including web scraping
if(file.exists("Cache/WC.UC.dist.csv")) {WC.UC.dist <- read.csv("Cache/WC.UC.dist.csv")} else{source("1.c - City Data.R")}
#############################################################################################################
############################# Merge the Data Sets into a "PreGTD"###########################################
#############################################################################################################
###### Merge GTD & Country Level Data ######
GTDWDI <- merge(GTD, CountryData, by.x=c("country_txt", "iyear"), by.y=c("country", "year"), all.x=TRUE, sort=TRUE)
###### Merge Combined set with City Data ######
GTDWDIcity <- GTDWDI$city
GTDWDIcountry <- GTDWDI$country_txt
Cities <- WC.UC.dist$old.name
Countries <- WC.UC.dist$country.etc
WC.UC.dist["merge"] <- paste(Countries, Cities, sep="")
WC.UC.dist <- WC.UC.dist[order(WC.UC.dist$merge, WC.UC.dist$capital, -WC.UC.dist$pop),]
WC.UC.dist <- WC.UC.dist[!duplicated(WC.UC.dist$merge), ]
Testframe <- GTDWDI
Testframe["merge"] <-data.frame(paste(GTDWDIcountry, GTDWDIcity, sep=""))
PreGTD <- merge(Testframe, WC.UC.dist, by=c("merge"), all.x=TRUE)
PreGTD  <- PreGTD [order(-PreGTD$HUMscale, na.last=TRUE) , ]
source('SmallScripts/dynamic_n_relative_CitySize.R')
# limit and order the new PreGTD
PreGTD <- subset(PreGTD, select=c(eventid, merge, year, imonth, iday, city, old.name, pop, Rel.CS, EN.URB.LCTY.UR,  capital, largestC, part.of.urban.center,
Closest.Urban.Center,largest.UC, coastalMC, WC.UC.dist.km, attacktype1,targtype1, targsubtype1, weaptype1, weapsubtype1,
TUPscale, PROPscale, HUMscale, Extra.WAR.In, Extra.WAR.Out, Intra.WAR, Inter.WAR, old.pop, pop.today))
# write a csv, just to be sure
write.csv(PreGTD, file="TerrorData/Pregtd.csv")
rm(Testframe, GTDWDIcity, GTDWDIcountry, Cities, GTD, Countries, GTDWDI)
#############################################################################################################
write.csv(PreGTD, file="TerrorData/Pregtd.csv")
#############################################################################################################
################### Loading Datasets previously gathered, cleaned and partially merged ######################
#############################################################################################################
# Global Terrorism Database (GTD) with some new scales and categories we introduced to the GTD for our purposes
if(file.exists("Cache/GTD.csv")) {GTD <- read.csv("Cache/GTD.csv")} else{source("1.a - Global Terrorism Database.R")}
# Country level data from the World Bank Development Indicators (WDI) and the The Correlates of War (COW) project data on wars.
if(file.exists("Cache/CountryData.csv")){CountryData <- read.csv("Cache/CountryData.csv")} else{source("1.b - Country Data.R")}
# City level data from a number of sources, including web scraping
if(file.exists("Cache/WC.UC.dist.csv")) {WC.UC.dist <- read.csv("Cache/WC.UC.dist.csv")} else{source("1.c - City Data.R")}
#############################################################################################################
############################# Merge the Data Sets into a "PreGTD"###########################################
#############################################################################################################
###### Merge GTD & Country Level Data ######
GTDWDI <- merge(GTD, CountryData, by.x=c("country_txt", "iyear"), by.y=c("country", "year"), all.x=TRUE, sort=TRUE)
###### Merge Combined set with City Data ######
GTDWDIcity <- GTDWDI$city
GTDWDIcountry <- GTDWDI$country_txt
Cities <- WC.UC.dist$old.name
Countries <- WC.UC.dist$country.etc
WC.UC.dist["merge"] <- paste(Countries, Cities, sep="")
WC.UC.dist <- WC.UC.dist[order(WC.UC.dist$merge, WC.UC.dist$capital, -WC.UC.dist$pop),]
WC.UC.dist <- WC.UC.dist[!duplicated(WC.UC.dist$merge), ]
Testframe <- GTDWDI
Testframe["merge"] <-data.frame(paste(GTDWDIcountry, GTDWDIcity, sep=""))
PreGTD <- merge(Testframe, WC.UC.dist, by=c("merge"), all.x=TRUE)
PreGTD  <- PreGTD [order(-PreGTD$HUMscale, na.last=TRUE) , ]
# minor cleaning
PreGTD$part.of.urban.center[is.na(PreGTD$part.of.urban.center)] <- FALSE
PreGTD$in.urban.centers.environment[is.na(PreGTD$in.urban.centers.environment)] <- FALSE
PreGTD$in.urban.centers.environment <- recode(PreGTD$in.urban.centers.environment, "TRUE=1")
PreGTD$part.of.urban.center <- recode(PreGTD$part.of.urban.center, "TRUE=1")
PreGTD$capital[is.na(PreGTD$capital)] <- 0
PreGTD$largestC[is.na(PreGTD$largestC)] <- 0
PreGTD$largest.UC[is.na(PreGTD$largest.UC)] <- 0
PreGTD$coastalMC[is.na(PreGTD$coastalMC)] <- 0
PreGTD$pop[is.na(PreGTD$pop)] <- 0
PreGTD$HUMscale[is.na(PreGTD$HUMscale)] <- 0
PreGTD$TUPscale[is.na(PreGTD$TUPscale)] <- 0
G2<-PreGTD
G2$SP.URB.TOTL <- as.numeric(G2$SP.URB.TOTL )
G2$MAX.URB.TOTL <- as.numeric(G2$MAX.URB.TOTL)
G2$EN.URB.MCTY <- as.numeric(G2$EN.URB.MCTY)
G2$MAX.URB.MCTY <- as.numeric(G2$MAX.URB.MCTY)
G2$EN.URB.LCTY.UR <- as.numeric(G2$EN.URB.LCTY.UR)
G2$MAX.URB.LCTY.UR <- as.numeric(G2$MAX.URB.LCTY.UR)
G2$pop <- as.numeric(G2$pop)
# prepare for regression
G2["year"] <- as.numeric(G2$iyear)
G2 <- G2[order(-G2$pop),]
G2["pop.today"] <- G2$pop
#in case we only have URB.POP numers, we assume that all cities grew with that
G2["city.population_with_time"] <- ifelse(!is.na(G2$SP.URB.TOTL), G2$pop.today*G2$SP.URB.TOTL/G2$MAX.URB.TOTL, G2$pop.today)
# if it is the largest city, EN.URB.LCTY.UR is the size
G2$city.population_with_time <-ifelse(G2$part.of.urban.center==FALSE
& G2$pop.today>=999999
& G2$largestC==1
& !is.na(G2$EN.URB.LCTY.UR)|
G2$part.of.urban.center==1
& G2$largest.UC==1
& !is.na(G2$EN.URB.LCTY.UR), G2$EN.URB.LCTY.UR, G2$city.population_with_time)
# if it is a city with more than 1mil, EN.URB.MCTY-EN.URB.LCTY.UR is the size
G2$city.population_with_time <- ifelse(G2$city.population_with_time!=G2$EN.URB.LCTY.UR
& G2$pop.today>=999999
& G2$EN.URB.LCTY.UR >= G2$EN.URB.MCTY
& G2$MAX.URB.LCTY.UR >= G2$MAX.URB.MCTY
& !is.na(G2$EN.URB.MCTY)
& !is.na(G2$EN.URB.LCTY.UR)
& !is.na(G2$MAX.URB.MCTY)
& !is.na(G2$MAX.URB.LCTY.UR)
& G2$MAX.URB.MCTY!=0,
((G2$EN.URB.MCTY-G2$EN.URB.LCTY.UR)/
(G2$MAX.URB.MCTY-G2$MAX.URB.LCTY.UR)
*G2$city.population_with_time), (G2$city.population_with_time))
# if it is a city with less than 1mil, SP.URB.TOTL-EN.URB.MCTY is the size
G2$city.population_with_time <- ifelse(G2$city.population_with_time!=G2$EN.URB.LCTY.UR
& G2$pop.today<=999999
& G2$EN.URB.MCTY >= G2$SP.URB.TOTL
& G2$MAX.URB.MCTY >= G2$MAX.URB.TOTL
& !is.na(G2$EN.URB.MCTY)
& !is.na(G2$MAX.URB.MCTY)
& !is.na(G2$MAX.URB.TOTL)
& G2$MAX.URB.TOTL!=0
& G2$MAX.URB.MCTY!=0
& !is.na(G2$EN.URB.LCTY.UR)
& !is.na(G2$SP.URB.TOTL),  ((G2$SP.URB.TOTL-G2$EN.URB.MCTY)/
(G2$MAX.URB.TOTL-G2$MAX.URB.MCTY)
*G2$city.population_with_time), (G2$city.population_with_time))
# some cleaning
G2$city.population_with_time <- ifelse(is.na(G2$city.population_with_time)&(!is.na(G2$pop.today)), G2$pop.today,
G2$city.population_with_time)
G2$EN.URB.LCTY.UR <- ifelse(is.na(G2$EN.URB.LCTY.UR)&(!is.na(G2$pop)), G2$pop, G2$EN.URB.LCTY.UR)
G2$EN.URB.LCTY.UR <- ifelse(is.na(G2$EN.URB.LCTY.UR)&(!is.na(G2$pop))&G2$part.of.urban.center==1
& G2$largest.UC==1, G2$pop, G2$EN.URB.LCTY.UR)
write.csv(G2, file="test.csv")
G2$pop <-  round(G2$city.population_with_time)
G2["Rel.CS"] <- G2$pop/G2$EN.URB.LCTY.UR
G2$pop[which(is.na(G2$pop))] <- 0
G2["Rel.CS"] <- G2$pop/G2$EN.URB.LCTY.UR
# limit and order the new PreGTD
PreGTD <- subset(PreGTD, select=c(eventid, merge, year, imonth, iday, city, old.name, pop, Rel.CS, EN.URB.LCTY.UR,  capital, largestC, part.of.urban.center,
Closest.Urban.Center,largest.UC, coastalMC, WC.UC.dist.km, attacktype1,targtype1, targsubtype1, weaptype1, weapsubtype1,
TUPscale, PROPscale, HUMscale, Extra.WAR.In, Extra.WAR.Out, Intra.WAR, Inter.WAR, old.pop, pop.today))
# write a csv, just to be sure
write.csv(PreGTD, file="TerrorData/Pregtd.csv")
# limit and order the new PreGTD
PreGTD <- subset(PreGTD, select=c(eventid, merge, year, imonth, iday, city, old.name, pop, Rel.CS, EN.URB.LCTY.UR,  capital, largestC, part.of.urban.center,
Closest.Urban.Center,largest.UC, coastalMC, WC.UC.dist.km, attacktype1,targtype1, targsubtype1, weaptype1, weapsubtype1,
TUPscale, PROPscale, HUMscale, Extra.WAR.In, Extra.WAR.Out, Intra.WAR, Inter.WAR, old.pop, pop.today))
# write a csv, just to be sure
write.csv(PreGTD, file="TerrorData/Pregtd.csv")
# limit and order the new PreGTD
PreGTD <- subset(PreGTD, select=c(eventid, merge, iyear, imonth, iday, city, old.name, pop, Rel.CS, EN.URB.LCTY.UR,  capital, largestC, part.of.urban.center,
Closest.Urban.Center,largest.UC, coastalMC, WC.UC.dist.km, attacktype1,targtype1, targsubtype1, weaptype1, weapsubtype1,
TUPscale, PROPscale, HUMscale, Extra.WAR.In, Extra.WAR.Out, Intra.WAR, Inter.WAR, old.pop, pop.today))
# write a csv, just to be sure
write.csv(PreGTD, file="TerrorData/Pregtd.csv")
#############################################################################################################
# Global Terrorism Database (GTD) with some new scales and categories we introduced to the GTD for our purposes
if(file.exists("Cache/GTD.csv")) {GTD <- read.csv("Cache/GTD.csv")} else{source("1.a - Global Terrorism Database.R")}
# Country level data from the World Bank Development Indicators (WDI) and the The Correlates of War (COW) project data on wars.
if(file.exists("Cache/CountryData.csv")){CountryData <- read.csv("Cache/CountryData.csv")} else{source("1.b - Country Data.R")}
# City level data from a number of sources, including web scraping
if(file.exists("Cache/WC.UC.dist.csv")) {WC.UC.dist <- read.csv("Cache/WC.UC.dist.csv")} else{source("1.c - City Data.R")}
#############################################################################################################
############################# Merge the Data Sets into a "PreGTD"###########################################
#############################################################################################################
###### Merge GTD & Country Level Data ######
GTDWDI <- merge(GTD, CountryData, by.x=c("country_txt", "iyear"), by.y=c("country", "year"), all.x=TRUE, sort=TRUE)
###### Merge Combined set with City Data ######
GTDWDIcity <- GTDWDI$city
GTDWDIcountry <- GTDWDI$country_txt
Cities <- WC.UC.dist$old.name
Countries <- WC.UC.dist$country.etc
WC.UC.dist["merge"] <- paste(Countries, Cities, sep="")
WC.UC.dist <- WC.UC.dist[order(WC.UC.dist$merge, WC.UC.dist$capital, -WC.UC.dist$pop),]
WC.UC.dist <- WC.UC.dist[!duplicated(WC.UC.dist$merge), ]
Testframe <- GTDWDI
Testframe["merge"] <-data.frame(paste(GTDWDIcountry, GTDWDIcity, sep=""))
PreGTD <- merge(Testframe, WC.UC.dist, by=c("merge"), all.x=TRUE)
PreGTD  <- PreGTD [order(-PreGTD$HUMscale, na.last=TRUE) , ]
source('SmallScripts/dynamic_n_relative_CitySize.R')
# limit and order the new PreGTD
PreGTD <- subset(PreGTD, select=c(eventid, merge, iyear, imonth, iday, city, old.name, pop, Rel.CS, EN.URB.LCTY.UR,  capital, largestC, part.of.urban.center,
Closest.Urban.Center,largest.UC, coastalMC, WC.UC.dist.km, attacktype1,targtype1, targsubtype1, weaptype1, weapsubtype1,
TUPscale, PROPscale, HUMscale, Extra.WAR.In, Extra.WAR.Out, Intra.WAR, Inter.WAR, old.pop, pop.today))
# write a csv, just to be sure
write.csv(PreGTD, file="TerrorData/Pregtd.csv")
rm(Testframe, GTDWDIcity, GTDWDIcountry, Cities, GTD, Countries, GTDWDI)
################### Loading Datasets previously gathered, cleaned and partially merged ######################
#############################################################################################################
# Global Terrorism Database (GTD) with some new scales and categories we introduced to the GTD for our purposes
if(file.exists("Cache/GTD.csv")) {GTD <- read.csv("Cache/GTD.csv")} else{source("1.a - Global Terrorism Database.R")}
# Country level data from the World Bank Development Indicators (WDI) and the The Correlates of War (COW) project data on wars.
if(file.exists("Cache/CountryData.csv")){CountryData <- read.csv("Cache/CountryData.csv")} else{source("1.b - Country Data.R")}
# City level data from a number of sources, including web scraping
if(file.exists("Cache/WC.UC.dist.csv")) {WC.UC.dist <- read.csv("Cache/WC.UC.dist.csv")} else{source("1.c - City Data.R")}
#############################################################################################################
############################# Merge the Data Sets into a "PreGTD"###########################################
#############################################################################################################
###### Merge GTD & Country Level Data ######
GTDWDI <- merge(GTD, CountryData, by.x=c("country_txt", "iyear"), by.y=c("country", "year"), all.x=TRUE, sort=TRUE)
###### Merge Combined set with City Data ######
GTDWDIcity <- GTDWDI$city
GTDWDIcountry <- GTDWDI$country_txt
Cities <- WC.UC.dist$old.name
Countries <- WC.UC.dist$country.etc
WC.UC.dist["merge"] <- paste(Countries, Cities, sep="")
WC.UC.dist <- WC.UC.dist[order(WC.UC.dist$merge, WC.UC.dist$capital, -WC.UC.dist$pop),]
WC.UC.dist <- WC.UC.dist[!duplicated(WC.UC.dist$merge), ]
Testframe <- GTDWDI
Testframe["merge"] <-data.frame(paste(GTDWDIcountry, GTDWDIcity, sep=""))
PreGTD <- merge(Testframe, WC.UC.dist, by=c("merge"), all.x=TRUE)
PreGTD  <- PreGTD [order(-PreGTD$HUMscale, na.last=TRUE) , ]
source('SmallScripts/dynamic_n_relative_CitySize.R')
# limit and order the new PreGTD
PreGTD <- subset(PreGTD, select=c(eventid, merge, iyear, imonth, iday, city, old.name, pop, Rel.CS, EN.URB.LCTY.UR,  capital, largestC, part.of.urban.center,
Closest.Urban.Center,largest.UC, coastalMC, WC.UC.dist.km, attacktype1,targtype1, targsubtype1, weaptype1, weapsubtype1,
TUPscale, PROPscale, HUMscale, Extra.WAR.In, Extra.WAR.Out, Intra.WAR, Inter.WAR, old.pop, pop.today))
# write a csv, just to be sure
write.csv(PreGTD, file="TerrorData/Pregtd.csv")
rm(Testframe, GTDWDIcity, GTDWDIcountry, Cities, GTD, Countries, GTDWDI)
#############################################################################################################
# Global Terrorism Database (GTD) with some new scales and categories we introduced to the GTD for our purposes
if(file.exists("Cache/GTD.csv")) {GTD <- read.csv("Cache/GTD.csv")} else{source("1.a - Global Terrorism Database.R")}
# Country level data from the World Bank Development Indicators (WDI) and the The Correlates of War (COW) project data on wars.
if(file.exists("Cache/CountryData.csv")){CountryData <- read.csv("Cache/CountryData.csv")} else{source("1.b - Country Data.R")}
# City level data from a number of sources, including web scraping
if(file.exists("Cache/WC.UC.dist.csv")) {WC.UC.dist <- read.csv("Cache/WC.UC.dist.csv")} else{source("1.c - City Data.R")}
#############################################################################################################
############################# Merge the Data Sets into a "PreGTD"###########################################
#############################################################################################################
###### Merge GTD & Country Level Data ######
GTDWDI <- merge(GTD, CountryData, by.x=c("country_txt", "iyear"), by.y=c("country", "year"), all.x=TRUE, sort=TRUE)
###### Merge Combined set with City Data ######
GTDWDIcity <- GTDWDI$city
GTDWDIcountry <- GTDWDI$country_txt
Cities <- WC.UC.dist$old.name
Countries <- WC.UC.dist$country.etc
WC.UC.dist["merge"] <- paste(Countries, Cities, sep="")
WC.UC.dist <- WC.UC.dist[order(WC.UC.dist$merge, WC.UC.dist$capital, -WC.UC.dist$pop),]
WC.UC.dist <- WC.UC.dist[!duplicated(WC.UC.dist$merge), ]
Testframe <- GTDWDI
Testframe["merge"] <-data.frame(paste(GTDWDIcountry, GTDWDIcity, sep=""))
PreGTD <- merge(Testframe, WC.UC.dist, by=c("merge"), all.x=TRUE)
PreGTD  <- PreGTD [order(-PreGTD$HUMscale, na.last=TRUE) , ]
source('SmallScripts/dynamic_n_relative_CitySize.R')
# limit and order the new PreGTD
PreGTD <- subset(PreGTD, select=c(eventid, merge, iyear, imonth, iday, city, old.name, pop, Rel.CS, EN.URB.LCTY.UR,  capital, largestC, part.of.urban.center,
Closest.Urban.Center,largest.UC, coastalMC, WC.UC.dist.km, attacktype1,targtype1, targsubtype1, weaptype1, weapsubtype1,
TUPscale, PROPscale, HUMscale, Extra.WAR.In, Extra.WAR.Out, Intra.WAR, Inter.WAR, old.pop, pop.today))
# write a csv, just to be sure
write.csv(PreGTD, file="TerrorData/Pregtd.csv")
rm(Testframe, GTDWDIcity, GTDWDIcountry, Cities, GTD, Countries, GTDWDI)
PreGTD$PROPscale<-as.numeric(PreGTD$PROPscale)
PreGTD$HUMscale<-as.numeric(PreGTD$HUMscale)
PreGTD["weightGTD"] <- as.numeric((PreGTD$HUMscale^(1/2))+(PreGTD$PROPscale/(PreGTD$PROPscale+1)+1))
PreGTD$weightGTD[is.na(PreGTD$weightGTD)] <- 0
PreGTD$Rel.CS<-as.numeric(PreGTD$Rel.CS)
PreGTD$weightGTD<-as.numeric(PreGTD$weightGTD)
# linear regression of Rel.CS over time
Linear1 <- lm(Rel.CS ~ year, weight=weightGTD, data=PreGTD)
PreGTD$PROPscale<-as.numeric(PreGTD$PROPscale)
PreGTD$HUMscale<-as.numeric(PreGTD$HUMscale)
PreGTD["weightGTD"] <- as.numeric((PreGTD$HUMscale^(1/2))+(PreGTD$PROPscale/(PreGTD$PROPscale+1)+1))
PreGTD$weightGTD[is.na(PreGTD$weightGTD)] <- 0
PreGTD$Rel.CS<-as.numeric(PreGTD$Rel.CS)
PreGTD$weightGTD<-as.numeric(PreGTD$weightGTD)
# linear regression of Rel.CS over time
Linear1 <- lm(Rel.CS ~ iyear, weight=weightGTD, data=PreGTD)
summary(Linear1)
stargazer(Linear1, type="latex", out="Analysis Test/Linear Regression of realtive city size.html")
Linear1 <- lm(Rel.CS ~ iyear, data=PreGTD)
summary(Linear1)
stargazer(Linear1, type="latex", out="Analysis Test/Linear Regression of realtive city size.html")
plot(Linear1, which = 4)
plot(PreGTD$year, 100*PreGTD$Rel.CS)
plot(PreGTD$year, 100*PreGTD$Rel.CS)
plot(PreGTD$iyear, 100*PreGTD$Rel.CS)
