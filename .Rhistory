###########################################
###########################################
# WORLD CITY DATASET 1/2 (worldcities2013)
# here: http://download.maxmind.com/download/worldcities/worldcitiespop.txt.gz and transformed into CSV
worldcities2013 <- read.csv("City Data/worldcitiespop.csv")
# introduce Tehran as it was missing in the original dataset
worldcities2013 <- rbind(worldcities2013, data.frame(X=0,Country="ir", City="tehran", AccentCity="Tehran",
Region= 1, Latitude=35.67, Longitude=51.43,Population=7160094))
# introduce Akkaraipattu as it was missing in the original dataset
worldcities2013 <- rbind(worldcities2013, data.frame(X=0,Country="lk", City="Akkaraipattu", AccentCity="Akkaraipattu",
Region= 31, Latitude=7.227862, Longitude=81.850551,Population=35000))
# sorting by population
worldcities2013 <- worldcities2013[order(-worldcities2013$Population, na.last=TRUE) , ]
# replace 2digit coountry names by the names used in the secon city dataset
source('SmallScripts/2digit2ctry.R')
worldcities2013$City <- gsub(" ", "", worldcities2013$City)
worldcities2013$City <- tolower(worldcities2013$City)
##########################################
# WORLD CITY DATASET 2/2 (world.cities2009)
### list the world capital cities
data(world.cities)
world.cities$name <- tolower(world.cities$name)
world.cities2009 <- world.cities[order(-world.cities$pop, na.last=TRUE) , ]
rm(world.cities)
#The dataframe wrongly lists dehli as not being the capital of india, plus had a typo in seoul, which both we recode.
world.cities2009$capital[world.cities2009$name == "delhi" & world.cities2009$country.etc == "India"] <- "1"
world.cities2009$name[world.cities2009$name == "soul" & world.cities2009$country.etc == "Korea South"] <- "seoul"
world.cities2009$name[WC.UC.dist$name == "bombay" &  WC.UC.dist$country  == "India"] <- "mumbai"
# remane some countries so they match the first city dataset better
world.cities2009$country.etc[world.cities2009$country.etc == "Russia"] <- "Russian Federation"
world.cities2009$country.etc[world.cities2009$country.etc == "UK"] <- "United Kingdom"
world.cities2009$country.etc[world.cities2009$country.etc == "USA"] <- "United States of America"
world.cities2009$country.etc[world.cities2009$country.etc == "Korea North"] <- "Korea, Democratic People's Republic of"
world.cities2009$country.etc[world.cities2009$country.etc == "Korea South"] <- "Korea, Republic of"
world.cities2009$country.etc[world.cities2009$country.etc == "Sicily"] <- "Italy"
world.cities2009$country.etc[world.cities2009$country.etc == "East Timor"] <- "Timor-Leste"
world.cities2009$country.etc[world.cities2009$country.etc == "Madeira"] <- "Portugal"
world.cities2009$country.etc[world.cities2009$country.etc == "Madiera"] <- "Portugal"
##############################################################################################
# merge the two sets: cities 2013 and cities 2009 to world.cities
#some preliminary cleaning before merging
world.cities2009$name <- gsub(" ", "", world.cities2009$name)
world.cities2009$name <- tolower(world.cities2009$name)
world.cities2009$country.etc<-gsub(" ", "",world.cities2009$country.etc, ignore.case=TRUE)
world.cities2009$country.etc<-gsub("\\,", "",world.cities2009$country.etc, ignore.case=TRUE)
world.cities2009$country.etc <- tolower(world.cities2009$country.etc)
worldcities2013$Country <- tolower(worldcities2013$Country)
# subsets and renaming so the two datasets match in their columns
worldcities2013 <- subset(worldcities2013, select =c("City", "Country", "Population", "Latitude", "Longitude", "Region"))
colnames(worldcities2013)[1] <- "name"
colnames(worldcities2013)[2] <- "country.etc"
colnames(worldcities2013)[3] <- "pop"
colnames(worldcities2013)[4] <- "lat"
colnames(worldcities2013)[5] <- "long"
#create a column to merge over: countrycity
world.cities2009$merge <- paste(world.cities2009$country.etc, world.cities2009$name, sep="")
worldcities2013$merge <- paste(worldcities2013$country.etc, worldcities2013$name, sep="")
#merge to new set: "world.cities"
world.cities <- merge(world.cities2009, worldcities2013, by= c("merge", "name", "country.etc", "pop", "lat", "long"), all=TRUE)
world.cities <- world.cities[order(world.cities$merge, world.cities$capital, world.cities$pop),]
View(world.cities)
world.cities <- world.cities[!duplicated(world.cities$merge), ]
View(world.cities)
distHaversine(point1, point2m, r=6378137)
Zil["DistKM"] <- gdist(Zil$lon, Zil$lat.y, Zil$long, Zil$lat.x, units = km, a = 6378137.0, b = 6356752.3142, verbose = FALSE)
View(Zil)
PIF <- as.data.frame(distHaversine(point1, point2m, r=6378137))
View(PIF)
PIF <- distHaversine(point1, point2m, r=6378137)
Zil["DistKM"] <- gdist(lon.1=Zil$lon, lat.1=Zil$lat.y, lon.2=Zil$long, lat.2=Zil$lat.x, units = km, a = 6378137.0, b = 6356752.3142, verbose = FALSE)
View(Zil)
Zil["DistKM"] <- gdist(lon.1=Zil$lon, lat.1=Zil$lat.y, lon.2=Zil$long, lat.2=Zil$lat.x, units = "km", a = 6378137.0, b = 6356752.3142, verbose = FALSE)
View(Zil)
Zil["DistKM"] <- distHaversine(point1, point2m, r=6378137)
View(Zil)
View(Zil)
Zil.min <- aggregate(DistKM ~ name, Zil, function(x) min(x))
View(Zil.min)
Zil.ful <- merge(Zil.min, Zil, by=c("CityID", "DISTkm"))
Zil.ful <- merge(Zil.min, Zil, by=c("name", "DistKM"))
View(Zil.ful)
write.csv(Zil.ful, file="Iraq.csv")
X <- GTD$city
source('CityCleaning.R')
rawGTD <- read.csv("Terror Data/globalterrorismdb_0814dist.csv", header=TRUE)
#The (GTD) contains over a 120k observations on more than 120 variables. We don't need them all.
#We therefore filter the database to make it fit our needs, erasing over a 100 variables.
#We only want to look at successfull terror attacks and include basic data on time, location and target.
GTD <- subset(rawGTD, select = c(eventid, iyear, imonth, iday, country, country_txt, region, provstate, region_txt, city, attacktype1, targtype1, targsubtype1,
weaptype1, weapsubtype1, propextent, nkill, nwound),
iyear >= 1970 & success == 1, na.strings = c("", " "))
rm(rawGTD)
#Next we order the GTD)
GTD <- GTD[order (GTD$country_txt, GTD$iyear, GTD$imonth, GTD$iday, GTD$city), ]
X <- GTD$city
source('CityCleaning.R')
source('SmallScripts/delete_country_special_characters.R')
GTDcity <- X
X <- GTD$country_txt
source('SmallScripts/delete_country_special_characters.R')
GTDcountry <- X
world.cities<-WC.UC.dist
world.cities$CityID <- NULL
X<-world.cities$name
source('SmallScripts/delete_country_special_characters.R')
Cities <- X
X<-world.cities$country.etc
source('SmallScripts/delete_country_special_characters.R')
Countries <- X
world.cities["merge"] <- paste(Countries, Cities, sep="")
Testframe <- GTD[1:21]
Testframe["merge"] <-data.frame(paste(GTDcountry, GTDcity, sep=""))
PreGTD <- merge(Testframe, world.cities, by=c("merge"), all.x=TRUE)
PreGTD  <- PreGTD [order(-PreGTD$HUMscale, na.last=TRUE) , ]
TTT <- subset(PreGTD , select = c("merge", "city", "HUMscale", "name"), na.strings = c("", " "))
View(TTT)
View(GTD)
########################################################################################
########################################################################################
############################   GATHERING  DATA    ######################################
########################################################################################
########################################################################################
############################################
###### The Global Terrorism Database  ######
############################################
############################################
#Load the Global Terrorism Database (GTD). It is open souce and can be downloaded after registration at
# http://www.start.umd.edu/gtd/contact/
rawGTD <- read.csv("Terror Data/globalterrorismdb_0814dist.csv", header=TRUE)
#The (GTD) contains over a 120k observations on more than 120 variables. We don't need them all.
#We therefore filter the database to make it fit our needs, erasing over a 100 variables.
#We only want to look at successfull terror attacks and include basic data on time, location and target.
GTD <- subset(rawGTD, select = c(eventid, iyear, imonth, iday, country, country_txt, region, provstate, region_txt, city, attacktype1, targtype1, targsubtype1,
weaptype1, weapsubtype1, propextent, nkill, nwound),
iyear >= 1970 & success == 1, na.strings = c("", " "))
rm(rawGTD)
#Next we order the GTD)
GTD <- GTD[order (GTD$country_txt, GTD$iyear, GTD$imonth, GTD$iday, GTD$city), ]
############################################
#We introduce our first scale: "Targets Urbanity Potential Scale (TUPscale)"
GTD["TUPscale"] <- GTD$targsubtype1
GTD$TUPscale <- recode(GTD$TUPscale, "40:42 = 9; 9 = 0; 27:35 = 0; 37:39 = 0; 65 = 0; 72 = 0; 1 = 2; 4:5 = 2; 10 = 2;
12 = 2; 53:56 = 2; 58:59 = 2; 61:62 = 2; 82 = 2; 95:96 = 2;6 = 9; 13 = 9; 104:108 = 9;
51:52 = 9; 57 = 9; 60 = 9; 63:64 = 9; 73 = 9; 80:81 = 9; 88:92 = 9; 98 = 9; 2 = 7; 3 = 7;
7:8 = 7; 44 = 7; 48:50 = 7; 67:71 = 7; 74:79 = 7; 83:87 = 7; 97 = 7; 99 = 7; 14:26 = 9;
100:103 = 9; 111 = 9; 109 = 9; 110 = 9; 36 = 9; 43 = 9; 45:47 = 9; 66 = 9; 93:94 = 9;
11 = 9", as.numeric.result=TRUE)
# 0= Rural & Military; 2= Government & Police; 3= Potentilly Urban Workplace; #7= Potentilly Urban Infrastructure;
# 9= Potentilly Expression of Urban Core Life
############################################
# We introduce our second scale: "Extent of Property Damage (PROPscale)" and write it back into the GTD
GTD["PROPscale"] <- GTD$propextent
GTD$PROPscale <- as.numeric(GTD$PROPscale)
#Bring the values to the $ values coded in the originally coded categories.
GTD$PROPscale <- recode(GTD$PROPscale, "1=1000000000; 2=1000000; 3=1000; 4=0; NA=NA")
############################################
# We introduce our third scale: "Extent of Human Damage (HUMscale)" which adds wounded and killed /and write it back into the GTD
GTD["HUMscale"] <- GTD$nkill+GTD$nwound
GTD$HUMscale <- as.numeric(GTD$HUMscale)
X <- GTD$city
source('CityCleaning.R')
source('SmallScripts/delete_country_special_characters.R')
GTDcity <- X
X <- GTD$country_txt
source('SmallScripts/delete_country_special_characters.R')
GTDcountry <- X
world.cities<-WC.UC.dist
world.cities$CityID <- NULL
X<-world.cities$name
source('SmallScripts/delete_country_special_characters.R')
Cities <- X
X<-world.cities$country.etc
source('SmallScripts/delete_country_special_characters.R')
Countries <- X
world.cities["merge"] <- paste(Countries, Cities, sep="")
Testframe <- GTD[1:21]
Testframe["merge"] <-data.frame(paste(GTDcountry, GTDcity, sep=""))
PreGTD <- merge(Testframe, world.cities, by=c("merge"), all.x=TRUE)
PreGTD  <- PreGTD [order(-PreGTD$HUMscale, na.last=TRUE) , ]
TTT <- subset(PreGTD , select = c("merge", "city", "HUMscale", "name"), na.strings = c("", " "))
sum(is.na(TTT$name))
View(TTT)
############################################
###### The Global Terrorism Database  ######
############################################
############################################
#Load the Global Terrorism Database (GTD). It is open souce and can be downloaded after registration at
# http://www.start.umd.edu/gtd/contact/
rawGTD <- read.csv("Terror Data/globalterrorismdb_0814dist.csv", header=TRUE)
#The (GTD) contains over a 120k observations on more than 120 variables. We don't need them all.
#We therefore filter the database to make it fit our needs, erasing over a 100 variables.
#We only want to look at successfull terror attacks and include basic data on time, location and target.
GTD <- subset(rawGTD, select = c(eventid, iyear, imonth, iday, country, country_txt, region, provstate, region_txt, city, attacktype1, targtype1, targsubtype1,
weaptype1, weapsubtype1, propextent, nkill, nwound),
iyear >= 1970 & success == 1, na.strings = c("", " "))
rm(rawGTD)
#Next we order the GTD)
GTD <- GTD[order (GTD$country_txt, GTD$iyear, GTD$imonth, GTD$iday, GTD$city), ]
############################################
#We introduce our first scale: "Targets Urbanity Potential Scale (TUPscale)"
GTD["TUPscale"] <- GTD$targsubtype1
GTD$TUPscale <- recode(GTD$TUPscale, "40:42 = 9; 9 = 0; 27:35 = 0; 37:39 = 0; 65 = 0; 72 = 0; 1 = 2; 4:5 = 2; 10 = 2;
12 = 2; 53:56 = 2; 58:59 = 2; 61:62 = 2; 82 = 2; 95:96 = 2;6 = 9; 13 = 9; 104:108 = 9;
51:52 = 9; 57 = 9; 60 = 9; 63:64 = 9; 73 = 9; 80:81 = 9; 88:92 = 9; 98 = 9; 2 = 7; 3 = 7;
7:8 = 7; 44 = 7; 48:50 = 7; 67:71 = 7; 74:79 = 7; 83:87 = 7; 97 = 7; 99 = 7; 14:26 = 9;
100:103 = 9; 111 = 9; 109 = 9; 110 = 9; 36 = 9; 43 = 9; 45:47 = 9; 66 = 9; 93:94 = 9;
11 = 9", as.numeric.result=TRUE)
#Here we clean the GTD's country data
GTD$country_txt <- as.character(GTD$country_txt)
# 1. Combining formerly seperated countries
GTD$country_txt[GTD$country_txt == "East Germany (GDR)"] <- "Germany"
GTD$country_txt[GTD$country_txt == "West Germany (FRG)"] <- "Germany"
GTD$country_txt[GTD$country_txt == "North Yemen"] <- "Yemen"
GTD$country_txt[GTD$country_txt == "South Yemen"] <- "Yemen"
GTD$country_txt[GTD$country_txt == "Falkland Islands" ] <- "United Kingdom"
GTD$country_txt[GTD$country_txt == "New Hebrides" ] <- "Vanuatu"
GTD$country_txt[GTD$country_txt == "South Vietnam" ] <- "Vietnam"
# 2. Splitting up formerly united countries
#Since we have WDI data going back 1970 on a per country scale also for countries
#that were not independent in 1970 (like the Soviet Union countries) we can just treat the cities the attack took place as
#being part of the country they are a part of now.
# 2.1. The Soviet Union
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Yerevan" ] <- "Armenia"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Meghri" ] <- "Armenia"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Aygepar" ] <- "Armenia"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Erubuni" ] <- "Armenia"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Charektar" ] <- "Armenia"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Kirovakan" ] <- "Armenia"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Yevlakh" ] <- "Azerbaijan"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Aterk" ] <- "Azerbaijan"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Gyandzha" ] <- "Azerbaijan"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Tatli" ] <- "Azerbaijan"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Tallinn" ] <- "Estonia"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Ikla" ] <- "Estonia"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Tbilisi" ] <- "Georgia"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Osh" ] <- "Kyrgyzstan"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Riga" ] <- "Latvia"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Ainazi" ] <- "Latvia"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Lavoriskes" ] <- "Lithuania"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Birzai" ] <- "Lithuania"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Vilnius" ] <- "Lithuania"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Salociai" ] <- "Lithuania"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Medininkai" ] <- "Lithuania"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Moscow" ] <- "Russia"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Buynaksk" ] <- "Russia"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Kara-Su" ] <- "Russia"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Novgorod" ] <- "Russia"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Vasyurinskaya" ] <- "Russia"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Ostankinskiy" ] <- "Russia"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Grebenskaya" ] <- "Russia"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Temirgoye" ] <- "Russia"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Irkutsk" ] <- "Russia"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Sverdlovsk" ] <- "Russia"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Leningrad" ] <- "Russia"
# 2.2. Czechoslovakia
GTD$country_txt[GTD$country_txt == "Czechoslovakia" & GTD$city =="Prague" ] <- "Czech Republic"
GTD$country_txt[GTD$country_txt == "Czechoslovakia" & GTD$city =="Usti Nad Labem" ] <- "Czech Republic"
GTD$country_txt[GTD$country_txt == "Czechoslovakia" & GTD$city =="Halickuv Brod" ] <- "Czech Republic"
GTD$country_txt[GTD$country_txt == "Czechoslovakia" & GTD$city =="Hradec Kralove" ] <- "Czech Republic"
GTD$country_txt[GTD$country_txt == "Czechoslovakia" & GTD$city =="Bratislava" ] <- "Slovak Republic"
# 2.3. Serbia-Montenegro
GTD$country_txt[GTD$country_txt == "Serbia-Montenegro" & GTD$city =="Bujanovac" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Serbia-Montenegro" & GTD$city =="Zarkovo" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Serbia-Montenegro" & GTD$city =="Presevo" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Serbia-Montenegro" & GTD$city =="Belgrade" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Serbia-Montenegro" & GTD$city =="Dobrosin" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Serbia-Montenegro" & GTD$city =="Subotica" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Serbia-Montenegro" & GTD$city =="Velki Trnovac" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Serbia-Montenegro" & GTD$city =="Novi Pazar" ] <- "Serbia"
# 2.4. Yugoslavia
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Bogicevica" ] <- "Albania"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Banjica" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Belgrade" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Blace" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Borovica" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Bujanovac" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Bujic" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Cacak" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Cerevajka" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Dolovo" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Konculj" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Lisani" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Loznica" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Medvedja" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Muhovac" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Nis" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Novi Sad" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Oraovica" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Popuke" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Pozarevac" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Subotica" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Surcin" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Valjevo" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Velika Reka" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Veliki Trnovac" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Velki Trnovac" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Vranje" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Zemun" ] <- "Serbia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Celopek" ] <- "Macedonia, FYR"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Prilep" ] <- "Macedonia, FYR"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Skopje" ] <- "Macedonia, FYR"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Berane" ] <- "Montenegro"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Budva" ] <- "Montenegro"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Cetinje" ] <- "Montenegro"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Podgorica" ] <- "Montenegro"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Ljubljana" ] <- "Slovenia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Stari" ] <- "Slovenia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Stari Trg" ] <- "Slovenia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Benkovac" ] <- "Croatia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Borovac" ] <- "Croatia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Dolac"] <- "Croatia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Dubrovnik" ] <- "Croatia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Dvor na Uni" ] <- "Croatia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Kijevo" ] <- "Croatia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Knin" ] <- "Croatia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Lipik" ] <- "Croatia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Osijek" ] <- "Croatia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Pakrac" ] <- "Croatia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Petrinja" ] <- "Croatia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Polaca" ] <- "Croatia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Pribudic" ] <- "Croatia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Sotin" ] <- "Croatia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Titova Korenica" ] <- "Croatia"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Batlava" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Besinje" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Bradas" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Careva Cesma" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Decani" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Djakovica" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Donje Ljupce" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Donje Prekaze" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Donji Crnobreg" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Dulje" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Glogovac" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Gornja Klina" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Grabanicâ°" ] <- "Kosovo"  ######## This may be an encoding problem
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Grabc" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Istinic" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Klincina" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Kline" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Komoran" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Kosovo Polje" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Kosovska Mitrovica" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Krpimej" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Kruska" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Ljubenic" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Magurâ°" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Malisevo" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Opterusa" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Orlat" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Peje" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Podujeva" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Podujevâ°" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Prekale" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Pristina" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Prizren" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Runik" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Srbica" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Stimlje" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Streoc" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Surkis" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Suva Reka" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Titova Mitrovica" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Tusuz" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Urosevac" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Voksh" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Vucitrn" ] <- "Kosovo"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Banja Luka" ] <- "Bosnia and Herzegovina"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Bijelina" ] <- "Bosnia and Herzegovina"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Bosanski Brod" ] <- "Bosnia and Herzegovina"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Kalesija" ] <- "Bosnia and Herzegovina"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Mostar" ] <- "Bosnia and Herzegovina"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Odzak" ] <- "Bosnia and Herzegovina"
GTD$country_txt[GTD$country_txt == "Yugoslavia" & GTD$city =="Sarajevo" ] <- "Bosnia and Herzegovina"
# 3. Problematic recodings (e.g. contested regions, typos etc.)
#The following all seem to belong to the Nagorno-Karabakh region, contested by Armenia and Azerbaijan, but currently governed by
#Azerbaijan, though populated mostly by Armenians.
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Nagorno-Karabakh (Autonomous Oblast)" ] <- "Azerbaijan"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Askeran" ] <- "Azerbaijan"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Askeran (District)" ] <- "Azerbaijan"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Khojali" ] <- "Azerbaijan"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Khodzhaly" ] <- "Azerbaijan"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Baganis-Airum" ] <- "Azerbaijan"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="baganis-airum" ] <- "Azerbaijan"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Airum Pirili" ] <- "Azerbaijan"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Chaily" ] <- "Azerbaijan"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Drmbon" ] <- "Azerbaijan"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Stepanakert" ] <- "Azerbaijan"
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Kazakh" ] <- "Azerbaijan"
#This attack was coded as having happened in Serbia-Montenegro, but according to lang-log data, the place the attack occurred is
# in Estonia
GTD$country_txt[GTD$country_txt == "Serbia-Montenegro" & GTD$city =="Levosje" ] <- "Estonia"
#These are two attacks in the early 1990s that seem to have targeted the Ararat Region outside of any city.
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Unknown" & GTD$provstate == "Armenia" ] <- "Armenia"
#It is on Crimea. We make a judgement call here and go for the country currently in charge.
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Feodocia" ] <- "Russia"
# This is Abchasia
GTD$country_txt[GTD$country_txt == "Soviet Union" & GTD$city =="Sukhumi" ] <- "Georgia"
# This is one attack happening in the Gulf of Aden, off the coast of Yemen
GTD$country_txt[GTD$country_txt == "International" ] <- "Yemen"
# 4. Renaming Countries to make them match the WDIData
GTD$country_txt[GTD$country_txt == "Bahamas" ] <- "Bahamas, The"
GTD$country_txt[GTD$country_txt == "Bosnia-Herzegovina" ] <- "Bosnia and Herzegovina"
GTD$country_txt[GTD$country_txt == "Central African Republic" ] <- "Central African Republic"
GTD$country_txt[GTD$country_txt == "Congo (Brazzaville)" ] <- "Congo, Dem. Rep."
GTD$country_txt[GTD$country_txt == "Congo (Kinshasa)" ] <- "Congo, Rep."
GTD$country_txt[GTD$country_txt == "Corsica" ] <- "France"
GTD$country_txt[GTD$country_txt == "Czechoslovakia" ] <- ""
GTD$country_txt[GTD$country_txt == "Egypt" ] <- "Egypt, Arab Rep."
GTD$country_txt[GTD$country_txt == "French Guiana" ] <- "France"
GTD$country_txt[GTD$country_txt == "Gambia" ] <- "Gambia, The"
GTD$country_txt[GTD$country_txt == "Great Britain" ] <- "United Kingdom"
GTD$country_txt[GTD$country_txt == "Guadeloupe" ] <- "France"
GTD$country_txt[GTD$country_txt == "Hong Kong" ] <- "Hong Kong SAR, China"
GTD$country_txt[GTD$country_txt == "Iran" ] <- "Iran, Islamic Rep."
GTD$country_txt[GTD$country_txt == "Ivory Coast" ] <- "Cote d'Ivoire"
GTD$country_txt[GTD$country_txt == "Kyrgyzstan" ] <- "Kyrgyz Republic"
GTD$country_txt[GTD$country_txt == "Laos" ] <- "Lao PDR"
GTD$country_txt[GTD$country_txt == "Macau" ] <- "Macao SAR, China"
GTD$country_txt[GTD$country_txt == "Macedonia" ] <- "Macedonia, FYR"
GTD$country_txt[GTD$country_txt == "Martinique" ] <- ""
GTD$country_txt[GTD$country_txt == "North Korea" ] <- "Korea, Dem. Rep."
GTD$country_txt[GTD$country_txt == "Northern Ireland" ] <- "United Kingdom"
GTD$country_txt[GTD$country_txt == "Rhodesia" ] <- "Zimbabwe"
GTD$country_txt[GTD$country_txt == "South Korea" ] <- "Korea, Rep."
GTD$country_txt[GTD$country_txt == "Syria" ] <- "Syrian Arab Republic"
GTD$country_txt[GTD$country_txt == "Taiwan" ] <- "China"
GTD$country_txt[GTD$country_txt == "Venezuela" ] <- "Venezuela, RB"
GTD$country_txt[GTD$country_txt == "Wallis and Futuna" ] <- "France"
GTD$country_txt[GTD$country_txt == "West Bank and Gaza Strip" ] <- "West Bank and Gaza"
GTD$country_txt[GTD$country_txt == "Western Sahara" ] <- "Spain"
GTD$country_txt[GTD$country_txt == "Yemen" ] <- "Yemen, Rep."
# create uniform country names like in the other datasets without special characters
X <- GTD$country_txt
source('SmallScripts/delete_country_special_characters.R')
GTD$country_txt <- X
rm(X)
YY <- GTD[which(GTD$country_txt == "india"),]
Y <- unique(YY$city)
Y<- as.character(Y)
Y<-data.frame(Y, "india")
Y["lookup"] <- paste(Y$X.Iraq., Y$Y, sep=", ")
IraqLOC <- geocode(Y$lookup, output = c("latlon", "latlona", "more", "all"), messaging = FALSE, sensor = FALSE, override_limit = TRUE)
IraqLOC["CityGTD"] <- Y$Y
ZZ <- WC.UC.dist[which(WC.UC.dist$country.etc == "iraq"),]
ZZZ <- subset(ZZ, select = c("long", "lat", "name"))
ZZZ$fake=1
IraqLOC$fake=1
Zil <-merge(ZZZ, IraqLOC, by=c("fake"))
Zil$lon <- as.numeric(Zil$lon)
Zil$lat.y <- as.numeric(Zil$lat.y)
Zil$long <- as.numeric(Zil$long)
Zil$lat.x <- as.numeric(Zil$lat.x)
Zil["DistKM"] <- gdist(lon.1=Zil$lon, lat.1=Zil$lat.y, lon.2=Zil$long, lat.2=Zil$lat.x, units = "km", a = 6378137.0, b = 6356752.3142, verbose = FALSE)
point1 <- data.frame(Zil$lon, Zil$lat.y)
point1m <- as.matrix(point1)
point2 <- data.frame(Zil$long, Zil$lat.x)
point2m <- as.matrix(point2)
Zil["point2"] <- Z, sep=", ")
Zil["DistKM"] <- distHaversine(point1, point2m, r=6378137)
Zil.min <- aggregate(DistKM ~ name, Zil, function(x) min(x))
Zil.ful <- merge(Zil.min, Zil, by=c("name", "DistKM"))
write.csv(Zil.ful, file="Iraq.csv")
YY <- GTD[which(GTD$country_txt == "india"),]
Y <- unique(YY$city)
Y<- as.character(Y)
Y<-data.frame(Y, "india")
Y["lookup"] <- paste(Y$X.Iraq., Y$Y, sep=", ")
IraqLOC <- geocode(Y$lookup, output = c("latlon", "latlona", "more", "all"), messaging = FALSE, sensor = FALSE, override_limit = TRUE)
IraqLOC["CityGTD"] <- Y$Y
ZZ <- WC.UC.dist[which(WC.UC.dist$country.etc == "iraq"),]
ZZZ <- subset(ZZ, select = c("long", "lat", "name"))
ZZZ$fake=1
IraqLOC$fake=1
Zil <-merge(ZZZ, IraqLOC, by=c("fake"))
Zil$lon <- as.numeric(Zil$lon)
Zil$lat.y <- as.numeric(Zil$lat.y)
Zil$long <- as.numeric(Zil$long)
Zil$lat.x <- as.numeric(Zil$lat.x)
Zil["DistKM"] <- gdist(lon.1=Zil$lon, lat.1=Zil$lat.y, lon.2=Zil$long, lat.2=Zil$lat.x, units = "km", a = 6378137.0, b = 6356752.3142, verbose = FALSE)
point1 <- data.frame(Zil$lon, Zil$lat.y)
point1m <- as.matrix(point1)
point2 <- data.frame(Zil$long, Zil$lat.x)
point2m <- as.matrix(point2)
Zil["DistKM"] <- distHaversine(point1, point2m, r=6378137)
Zil.min <- aggregate(DistKM ~ name, Zil, function(x) min(x))
Zil.ful <- merge(Zil.min, Zil, by=c("name", "DistKM"))
write.csv(Zil.ful, file="Iraq.csv")
IraqLOC <- geocode(Y$lookup, output = c("latlon", "latlona", "more", "all"), messaging = FALSE, sensor = FALSE, override_limit = FALSE)
X <- GTD$city
source('CityCleaning.R')
source('SmallScripts/delete_country_special_characters.R')
GTDcity <- X
X <- GTD$country_txt
source('SmallScripts/delete_country_special_characters.R')
GTDcountry <- X
world.cities<-WC.UC.dist
world.cities$CityID <- NULL
X<-world.cities$name
source('SmallScripts/delete_country_special_characters.R')
Cities <- X
X<-world.cities$country.etc
source('SmallScripts/delete_country_special_characters.R')
Countries <- X
world.cities["merge"] <- paste(Countries, Cities, sep="")
Testframe <- GTD[1:21]
Testframe["merge"] <-data.frame(paste(GTDcountry, GTDcity, sep=""))
PreGTD <- merge(Testframe, world.cities, by=c("merge"), all.x=TRUE)
PreGTD  <- PreGTD [order(-PreGTD$HUMscale, na.last=TRUE) , ]
TTT <- subset(PreGTD , select = c("merge", "city", "HUMscale", "name"), na.strings = c("", " "))
sum(is.na(TTT$name))
View(TTT)
