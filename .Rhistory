PreGTD2 <- subset(PreGTD, capital==!1 & Extra.WAR.In==0 & Extra.WAR.Out==0 & Intra.WAR==0 & Inter.WAR==0 & (TUPscale== 5 |TUPscale== 7 | TUPscale == 9))
PreGTD2$SP.URB.TOTL <- as.numeric(PreGTD2$SP.URB.TOTL)
PreGTD2$MAX.URB.TOTL <- as.numeric(PreGTD2$MAX.URB.TOTL)
PreGTD2$pop <- as.numeric(PreGTD2$pop)
PreGTD2["year"] <- as.numeric(PreGTD2$iyear-1970)
PreGTD2["city.population_2013"] <- PreGTD2$pop
PreGTD2["city.population_at.attack.time_liniear.grown"] <- ((PreGTD2$pop)*(PreGTD2$SP.URB.TOTL)/(PreGTD2$MAX.URB.TOTL))
PreGTD2["Citysize_relative_to_nations_Largest" ] <- as.numeric(PreGTD2$city.population_at.attack.time_liniear.grown/PreGTD2$EN.URB.LCTY.UR)
PreGTD2["PROPscale" ]<-as.numeric(PreGTD2$PROPscale)
PreGTD2["HUMscale" ]<-as.numeric(PreGTD2$HUMscale)
PreGTD2["Distance to Urban Center (km)"]<-as.numeric(PreGTD2$CUC.dist.km)
PreGTD2["weightGTD"] <- as.numeric((PreGTD2$HUMscale^(1/2))+(PreGTD2$PROPscale/(PreGTD2$PROPscale+1)))
PreGTD3 <- subset(PreGTD2, select=c(Citysize_relative_to_nations_Largest, year, weightGTD))
Linear1 <- lm(Citysize_relative_to_nations_Largest ~ year, weight=weightGTD, data=PreGTD3)
stargazer(Linear1, type="html", out="models.htm")
View(PreGTD)
PreGTD$part.of.urban.center[is.na(PreGTD$part.of.urban.center)] <- FALSE
PreGTD$in.urban.centers.environment[is.na(PreGTD$in.urban.centers.environment)] <- FALSE
PreGTD$in.urban.centers.environment <- recode(PreGTD$in.urban.centers.environment, "TRUE=1")
PreGTD$part.of.urban.center <- recode(PreGTD$part.of.urban.center, "TRUE=1")
View(PreGTD)
# Global Terrorism Database (GTD) with some new scales and categories we introduced to the GTD for our purposes
if(file.exists("Cache/GTD.csv")) {GTD <- read.csv("Cache/GTD.csv")} else{source("1.a - Global Terrorism Database.R")}
# Country level data from the World Bank Development Indicators and the The Correlates of War (COW) project data on wars.
if(file.exists("Cache/CountryData.csv")){CountryData <- read.csv("Cache/CountryData.csv")} else{source("1.b - Country Data.R")}
# City level data froma number of sources, including web sraping
if(file.exists("Cache/WC.UC.dist.csv")) {WC.UC.dist <- read.csv("Cache/WC.UC.dist.csv")} else{source("1.c - City Data.R")}
###### Merge GTD & Country Level Data ######
GTDWDI <- merge(GTD, CountryData, by.x=c("country_txt", "iyear"), by.y=c("country", "year"), all.x=TRUE, sort=TRUE)
###### Merge Combined set with & City Data ######
GTDWDIcity <- GTDWDI$city
GTDWDIcountry <- GTDWDI$country_txt
Cities <- WC.UC.dist$name
Countries <- WC.UC.dist$country.etc
WC.UC.dist["merge"] <- paste(Countries, Cities, sep="")
Testframe <- GTDWDI
Testframe["merge"] <-data.frame(paste(GTDWDIcountry, GTDWDIcity, sep=""))
PreGTD <- merge(Testframe, WC.UC.dist, by=c("merge"), all.x=TRUE)
PreGTD  <- PreGTD [order(-PreGTD$eventid, na.last=TRUE) , ]
PreGTD <- subset(PreGTD, select=c(eventid, merge, iyear, city, pop, capital, largestC, Closest.Urban.Center,
largest.UC, coastalMC, WC.UC.dist.km, part.of.urban.center, in.urban.centers.environment, attacktype1,
targtype1, targsubtype1, weaptype1, weapsubtype1, TUPscale, PROPscale, HUMscale, SP.POP.TOTL,
EN.URB.LCTY.UR, MAX.URB.LCTY.UR, EN.URB.MCTY, MAX.URB.MCTY, SP.URB.TOTL, MAX.URB.TOTL,
EN.POP.DNST, Extra.WAR.In, Extra.WAR.Out, Intra.WAR, Inter.WAR))
PreGTD$part.of.urban.center[is.na(PreGTD$part.of.urban.center)] <- FALSE
PreGTD$in.urban.centers.environment[is.na(PreGTD$in.urban.centers.environment)] <- FALSE
PreGTD$in.urban.centers.environment <- recode(PreGTD$in.urban.centers.environment, "TRUE=1")
PreGTD$part.of.urban.center <- recode(PreGTD$part.of.urban.center, "TRUE=1")
PreGTD$capital[is.na(PreGTD$capital)] <- 0
PreGTD$largestC[is.na(PreGTD$largestC)] <- 0
PreGTD$largest.UC[is.na(PreGTD$largest.UC)] <- 0
PreGTD$coastalMC[is.na(PreGTD$coastalMC)] <- 0
PreGTD$pop[is.na(PreGTD$pop)] <- 0
write.csv(PreGTD, file="TerrorData/Pregtd.csv")
rm(Testframe, GTDWDIcity, GTDWDIcountry, Cities, GTD, Countries, GTDWDI, WDIData)
View(PreGTD)
PreGTD2 <- subset(PreGTD, capital==!1 & Extra.WAR.In==0 & Extra.WAR.Out==0 & Intra.WAR==0 & Inter.WAR==0 & (TUPscale== 5 |TUPscale== 7 | TUPscale == 9))
PreGTD2$SP.URB.TOTL <- as.numeric(PreGTD2$SP.URB.TOTL)
PreGTD2$MAX.URB.TOTL <- as.numeric(PreGTD2$MAX.URB.TOTL)
PreGTD2$pop <- as.numeric(PreGTD2$pop)
PreGTD2["year"] <- as.numeric(PreGTD2$iyear-1970)
PreGTD2["city.population_2013"] <- PreGTD2$pop
PreGTD2["city.population_at.attack.time_liniear.grown"] <- ((PreGTD2$pop)*(PreGTD2$SP.URB.TOTL)/(PreGTD2$MAX.URB.TOTL))
PreGTD2["Citysize_relative_to_nations_Largest" ] <- as.numeric(PreGTD2$city.population_at.attack.time_liniear.grown/PreGTD2$EN.URB.LCTY.UR)
PreGTD2["PROPscale" ]<-as.numeric(PreGTD2$PROPscale)
PreGTD2["HUMscale" ]<-as.numeric(PreGTD2$HUMscale)
PreGTD2["Distance to Urban Center (km)"]<-as.numeric(PreGTD2$CUC.dist.km)
PreGTD2["weightGTD"] <- as.numeric((PreGTD2$HUMscale^(1/2))+(PreGTD2$PROPscale/(PreGTD2$PROPscale+1)))
PreGTD3 <- subset(PreGTD2, select=c(Citysize_relative_to_nations_Largest, year, weightGTD))
Linear1 <- lm(Citysize_relative_to_nations_Largest ~ year, weight=weightGTD, data=PreGTD3)
stargazer(Linear1, type="html", out="models.htm")
View(PreGTD2)
View(PreGTD)
PreGTD2 <- subset(PreGTD, capital==!1 & Extra.WAR.In==0 & Extra.WAR.Out==0 & Intra.WAR==0 & Inter.WAR==0 & (TUPscale== 5 |TUPscale== 7 | TUPscale == 9))
PreGTD2$SP.URB.TOTL <- as.numeric(PreGTD2$SP.URB.TOTL)
PreGTD2$MAX.URB.TOTL <- as.numeric(PreGTD2$MAX.URB.TOTL)
PreGTD2$pop <- as.numeric(PreGTD2$pop)
PreGTD2["year"] <- as.numeric(PreGTD2$iyear-1970)
PreGTD2["city.population_2013"] <- PreGTD2$pop
PreGTD2["city.population_at.attack.time_liniear.grown"] <- ((PreGTD2$pop)*(PreGTD2$SP.URB.TOTL)/(PreGTD2$MAX.URB.TOTL))
PreGTD2["Citysize_relative_to_nations_Largest" ] <- as.numeric(PreGTD2$city.population_at.attack.time_liniear.grown/PreGTD2$EN.URB.LCTY.UR)
PreGTD2["PROPscale" ]<-as.numeric(PreGTD2$PROPscale)
PreGTD2["HUMscale" ]<-as.numeric(PreGTD2$HUMscale)
PreGTD2["Distance to Urban Center (km)"]<-as.numeric(PreGTD2$WC.UC.dist.km)
PreGTD2["weightGTD"] <- as.numeric((PreGTD2$HUMscale^(1/2))+(PreGTD2$PROPscale/(PreGTD2$PROPscale+1)))
PreGTD2$Citysize_relative_to_nations_Largest[is.na(PreGTD2$Citysize_relative_to_nations_Largest)] <- 0
PreGTD2$weightGTD[is.na(PreGTD2$weightGTD)] <- 0
Linear1 <- lm(Citysize_relative_to_nations_Largest ~ year, weight=weightGTD, data=PreGTD2)
stargazer(Linear1, type="html", out="models.htm")
View(PreGTD)
###### Merge Combined set with & City Data ######
GTDWDIcity <- GTDWDI$city
GTDWDIcountry <- GTDWDI$country_txt
Cities <- WC.UC.dist$name
Countries <- WC.UC.dist$country.etc
WC.UC.dist["merge"] <- paste(Countries, Cities, sep="")
Testframe <- GTDWDI
Testframe["merge"] <-data.frame(paste(GTDWDIcountry, GTDWDIcity, sep=""))
PreGTD <- merge(Testframe, WC.UC.dist, by=c("merge"), all.x=TRUE)
PreGTD  <- PreGTD [order(-PreGTD$eventid, na.last=TRUE) , ]
PreGTD <- subset(PreGTD, select=c(eventid, merge, iyear, city, pop, capital, region_txt, largestC, Closest.Urban.Center,
largest.UC, coastalMC, WC.UC.dist.km, part.of.urban.center, in.urban.centers.environment, attacktype1,
targtype1, targsubtype1, weaptype1, weapsubtype1, TUPscale, PROPscale, HUMscale, SP.POP.TOTL,
EN.URB.LCTY.UR, MAX.URB.LCTY.UR, EN.URB.MCTY, MAX.URB.MCTY, SP.URB.TOTL, MAX.URB.TOTL,
EN.POP.DNST, Extra.WAR.In, Extra.WAR.Out, Intra.WAR, Inter.WAR))
PreGTD$part.of.urban.center[is.na(PreGTD$part.of.urban.center)] <- FALSE
PreGTD$in.urban.centers.environment[is.na(PreGTD$in.urban.centers.environment)] <- FALSE
PreGTD$in.urban.centers.environment <- recode(PreGTD$in.urban.centers.environment, "TRUE=1")
PreGTD$part.of.urban.center <- recode(PreGTD$part.of.urban.center, "TRUE=1")
PreGTD$capital[is.na(PreGTD$capital)] <- 0
PreGTD$largestC[is.na(PreGTD$largestC)] <- 0
PreGTD$largest.UC[is.na(PreGTD$largest.UC)] <- 0
PreGTD$coastalMC[is.na(PreGTD$coastalMC)] <- 0
PreGTD$pop[is.na(PreGTD$pop)] <- 0
write.csv(PreGTD, file="TerrorData/Pregtd.csv")
rm(Testframe, GTDWDIcity, GTDWDIcountry, Cities, GTD, Countries, GTDWDI, WDIData)
##############################################
##########Lukas B Cameron R Sascha S##########
##############################################
####### Gathering, Cleaning, Merging #########
##############################################
# In this script we combine all our previously established databases into one, bringing together
# terror data, country level data and city level data into one database ready for analysis.
#############################################################################################################
################### Loading Datasets previously gathered, cleaned and partially merged ######################
#############################################################################################################
# Global Terrorism Database (GTD) with some new scales and categories we introduced to the GTD for our purposes
if(file.exists("Cache/GTD.csv")) {GTD <- read.csv("Cache/GTD.csv")} else{source("1.a - Global Terrorism Database.R")}
# Country level data from the World Bank Development Indicators and the The Correlates of War (COW) project data on wars.
if(file.exists("Cache/CountryData.csv")){CountryData <- read.csv("Cache/CountryData.csv")} else{source("1.b - Country Data.R")}
# City level data froma number of sources, including web sraping
if(file.exists("Cache/WC.UC.dist.csv")) {WC.UC.dist <- read.csv("Cache/WC.UC.dist.csv")} else{source("1.c - City Data.R")}
#############################################################################################################
############################# Merge the Data Sets into a "PreGTD"###########################################
#############################################################################################################
###### Merge GTD & Country Level Data ######
GTDWDI <- merge(GTD, CountryData, by.x=c("country_txt", "iyear"), by.y=c("country", "year"), all.x=TRUE, sort=TRUE)
###### Merge Combined set with & City Data ######
GTDWDIcity <- GTDWDI$city
GTDWDIcountry <- GTDWDI$country_txt
Cities <- WC.UC.dist$name
Countries <- WC.UC.dist$country.etc
WC.UC.dist["merge"] <- paste(Countries, Cities, sep="")
Testframe <- GTDWDI
Testframe["merge"] <-data.frame(paste(GTDWDIcountry, GTDWDIcity, sep=""))
View(GTDWDI)
PreGTD <- merge(Testframe, WC.UC.dist, by=c("merge"), all.x=TRUE)
PreGTD  <- PreGTD [order(-PreGTD$eventid, na.last=TRUE) , ]
PreGTD <- subset(PreGTD, select=c(eventid, merge, iyear, city, pop, capital, region_txt, largestC, Closest.Urban.Center,
largest.UC, coastalMC, WC.UC.dist.km, part.of.urban.center, in.urban.centers.environment, attacktype1,
targtype1, targsubtype1, weaptype1, weapsubtype1, TUPscale, PROPscale, HUMscale, SP.POP.TOTL,
EN.URB.LCTY.UR, MAX.URB.LCTY.UR, EN.URB.MCTY, MAX.URB.MCTY, SP.URB.TOTL, MAX.URB.TOTL,
EN.POP.DNST, Extra.WAR.In, Extra.WAR.Out, Intra.WAR, Inter.WAR))
PreGTD$part.of.urban.center[is.na(PreGTD$part.of.urban.center)] <- FALSE
PreGTD$in.urban.centers.environment[is.na(PreGTD$in.urban.centers.environment)] <- FALSE
PreGTD$in.urban.centers.environment <- recode(PreGTD$in.urban.centers.environment, "TRUE=1")
PreGTD$part.of.urban.center <- recode(PreGTD$part.of.urban.center, "TRUE=1")
PreGTD$capital[is.na(PreGTD$capital)] <- 0
PreGTD$largestC[is.na(PreGTD$largestC)] <- 0
PreGTD$largest.UC[is.na(PreGTD$largest.UC)] <- 0
PreGTD$coastalMC[is.na(PreGTD$coastalMC)] <- 0
PreGTD$pop[is.na(PreGTD$pop)] <- 0
write.csv(PreGTD, file="TerrorData/Pregtd.csv")
rm(Testframe, GTDWDIcity, GTDWDIcountry, Cities, GTD, Countries, GTDWDI, WDIData)
View(PreGTD)
PreGTD2 <- subset(PreGTD, region_txt == "Middle East & North Africa" & capital==!1 & Extra.WAR.In==0 & Extra.WAR.Out==0 & Intra.WAR==0 & Inter.WAR==0 & (TUPscale== 5 |TUPscale== 7 | TUPscale == 9))
PreGTD2$SP.URB.TOTL <- as.numeric(PreGTD2$SP.URB.TOTL)
PreGTD2$MAX.URB.TOTL <- as.numeric(PreGTD2$MAX.URB.TOTL)
PreGTD2$pop <- as.numeric(PreGTD2$pop)
PreGTD2["year"] <- as.numeric(PreGTD2$iyear-1970)
PreGTD2["city.population_2013"] <- PreGTD2$pop
PreGTD2["city.population_at.attack.time_liniear.grown"] <- ((PreGTD2$pop)*(PreGTD2$SP.URB.TOTL)/(PreGTD2$MAX.URB.TOTL))
PreGTD2["Citysize_relative_to_nations_Largest" ] <- as.numeric(PreGTD2$city.population_at.attack.time_liniear.grown/PreGTD2$EN.URB.LCTY.UR)
PreGTD2["PROPscale" ]<-as.numeric(PreGTD2$PROPscale)
PreGTD2["HUMscale" ]<-as.numeric(PreGTD2$HUMscale)
PreGTD2["Distance to Urban Center (km)"]<-as.numeric(PreGTD2$WC.UC.dist.km)
PreGTD2["weightGTD"] <- as.numeric((PreGTD2$HUMscale^(1/2))+(PreGTD2$PROPscale/(PreGTD2$PROPscale+1)))
PreGTD2$Citysize_relative_to_nations_Largest[is.na(PreGTD2$Citysize_relative_to_nations_Largest)] <- 0
PreGTD2$weightGTD[is.na(PreGTD2$weightGTD)] <- 0
Linear1 <- lm(Citysize_relative_to_nations_Largest ~ year, weight=weightGTD, data=PreGTD2)
stargazer(Linear1, type="html", out="models.htm")
PreGTD2 <- subset(PreGTD, region_txt == "Middle East & North Africa" & Extra.WAR.In==0 & Extra.WAR.Out==0 & Intra.WAR==0 & Inter.WAR==0 & (TUPscale== 5 |TUPscale== 7 | TUPscale == 9))
PreGTD2$SP.URB.TOTL <- as.numeric(PreGTD2$SP.URB.TOTL)
PreGTD2$MAX.URB.TOTL <- as.numeric(PreGTD2$MAX.URB.TOTL)
PreGTD2$pop <- as.numeric(PreGTD2$pop)
PreGTD2["year"] <- as.numeric(PreGTD2$iyear-1970)
PreGTD2["city.population_2013"] <- PreGTD2$pop
PreGTD2["city.population_at.attack.time_liniear.grown"] <- ((PreGTD2$pop)*(PreGTD2$SP.URB.TOTL)/(PreGTD2$MAX.URB.TOTL))
PreGTD2["Citysize_relative_to_nations_Largest" ] <- as.numeric(PreGTD2$city.population_at.attack.time_liniear.grown/PreGTD2$EN.URB.LCTY.UR)
PreGTD2["PROPscale" ]<-as.numeric(PreGTD2$PROPscale)
PreGTD2["HUMscale" ]<-as.numeric(PreGTD2$HUMscale)
PreGTD2["Distance to Urban Center (km)"]<-as.numeric(PreGTD2$WC.UC.dist.km)
PreGTD2["weightGTD"] <- as.numeric((PreGTD2$HUMscale^(1/2))+(PreGTD2$PROPscale/(PreGTD2$PROPscale+1)))
PreGTD2$Citysize_relative_to_nations_Largest[is.na(PreGTD2$Citysize_relative_to_nations_Largest)] <- 0
PreGTD2$weightGTD[is.na(PreGTD2$weightGTD)] <- 0
Linear1 <- lm(Citysize_relative_to_nations_Largest ~ year, weight=weightGTD, data=PreGTD2)
stargazer(Linear1, type="html", out="models.htm")
PreGTD2 <- subset(PreGTD, region_txt == "South Asia" & capital ==!1 & Extra.WAR.In==0 & Extra.WAR.Out==0 & Intra.WAR==0 & Inter.WAR==0 & (TUPscale== 5 |TUPscale== 7 | TUPscale == 9))
PreGTD2$SP.URB.TOTL <- as.numeric(PreGTD2$SP.URB.TOTL)
PreGTD2$MAX.URB.TOTL <- as.numeric(PreGTD2$MAX.URB.TOTL)
PreGTD2$pop <- as.numeric(PreGTD2$pop)
PreGTD2["year"] <- as.numeric(PreGTD2$iyear-1970)
PreGTD2["city.population_2013"] <- PreGTD2$pop
PreGTD2["city.population_at.attack.time_liniear.grown"] <- ((PreGTD2$pop)*(PreGTD2$SP.URB.TOTL)/(PreGTD2$MAX.URB.TOTL))
PreGTD2["Citysize_relative_to_nations_Largest" ] <- as.numeric(PreGTD2$city.population_at.attack.time_liniear.grown/PreGTD2$EN.URB.LCTY.UR)
PreGTD2["PROPscale" ]<-as.numeric(PreGTD2$PROPscale)
PreGTD2["HUMscale" ]<-as.numeric(PreGTD2$HUMscale)
PreGTD2["Distance to Urban Center (km)"]<-as.numeric(PreGTD2$WC.UC.dist.km)
PreGTD2["weightGTD"] <- as.numeric((PreGTD2$HUMscale^(1/2))+(PreGTD2$PROPscale/(PreGTD2$PROPscale+1)))
PreGTD2$Citysize_relative_to_nations_Largest[is.na(PreGTD2$Citysize_relative_to_nations_Largest)] <- 0
PreGTD2$weightGTD[is.na(PreGTD2$weightGTD)] <- 0
Linear1 <- lm(Citysize_relative_to_nations_Largest ~ year, weight=weightGTD, data=PreGTD2)
stargazer(Linear1, type="html", out="models.htm")
View(PreGTD)
PreGTD2 <- subset(PreGTD, region_txt == "Sub-Saharan Africa" & capital ==!1 & Extra.WAR.In==0 & Extra.WAR.Out==0 & Intra.WAR==0 & Inter.WAR==0 & (TUPscale== 5 |TUPscale== 7 | TUPscale == 9))
PreGTD2 <- subset(PreGTD, region_txt == "Sub-Saharan Africa" & capital ==!1 & Extra.WAR.In==0 & Extra.WAR.Out==0 & Intra.WAR==0 & Inter.WAR==0 & (TUPscale== 5 |TUPscale== 7 | TUPscale == 9))
PreGTD2$SP.URB.TOTL <- as.numeric(PreGTD2$SP.URB.TOTL)
PreGTD2$MAX.URB.TOTL <- as.numeric(PreGTD2$MAX.URB.TOTL)
PreGTD2$pop <- as.numeric(PreGTD2$pop)
PreGTD2["year"] <- as.numeric(PreGTD2$iyear-1970)
PreGTD2["city.population_2013"] <- PreGTD2$pop
PreGTD2["city.population_at.attack.time_liniear.grown"] <- ((PreGTD2$pop)*(PreGTD2$SP.URB.TOTL)/(PreGTD2$MAX.URB.TOTL))
PreGTD2["Citysize_relative_to_nations_Largest" ] <- as.numeric(PreGTD2$city.population_at.attack.time_liniear.grown/PreGTD2$EN.URB.LCTY.UR)
PreGTD2["PROPscale" ]<-as.numeric(PreGTD2$PROPscale)
PreGTD2["HUMscale" ]<-as.numeric(PreGTD2$HUMscale)
PreGTD2["Distance to Urban Center (km)"]<-as.numeric(PreGTD2$WC.UC.dist.km)
PreGTD2["weightGTD"] <- as.numeric((PreGTD2$HUMscale^(1/2))+(PreGTD2$PROPscale/(PreGTD2$PROPscale+1)))
PreGTD2$Citysize_relative_to_nations_Largest[is.na(PreGTD2$Citysize_relative_to_nations_Largest)] <- 0
PreGTD2$weightGTD[is.na(PreGTD2$weightGTD)] <- 0
Linear1 <- lm(Citysize_relative_to_nations_Largest ~ year, weight=weightGTD, data=PreGTD2)
stargazer(Linear1, type="html", out="models.htm")
plot(Linear1, which = 1)
plot(PreGTD2$year, 100*PreGTD2$Citysize_relative_to_nations_Largest)
PreGTD2 <- subset(PreGTD, region_txt == "Sub-Saharan Africa" & capital ==!1 & Extra.WAR.In==0 & Extra.WAR.Out==0 & Intra.WAR==0 & Inter.WAR==0 & (TUPscale== 5 |TUPscale== 7 | TUPscale == 9)& iyear =< 1980)
PreGTD2 <- subset(PreGTD, region_txt == "Sub-Saharan Africa" & capital ==!1 & Extra.WAR.In==0 & Extra.WAR.Out==0 & Intra.WAR==0 & Inter.WAR==0 & (TUPscale== 5 |TUPscale== 7 | TUPscale == 9)& year =< 1980)
PreGTD2 <- subset(PreGTD, region_txt == "Sub-Saharan Africa" & capital ==!1 & Extra.WAR.In==0 & Extra.WAR.Out==0 & Intra
.WAR==0 & Inter.WAR==0 & (TUPscale== 5 |TUPscale== 7 | TUPscale == 9) $ iyear >= 1990)
PreGTD2$SP.URB.TOTL <- as.numeric(PreGTD2$SP.URB.TOTL)
PreGTD2$MAX.URB.TOTL <- as.numeric(PreGTD2$MAX.URB.TOTL)
PreGTD2$pop <- as.numeric(PreGTD2$pop)
PreGTD2["year"] <- as.numeric(PreGTD2$iyear-1970)
PreGTD2["city.population_2013"] <- PreGTD2$pop
PreGTD2["city.population_at.attack.time_liniear.grown"] <- ((PreGTD2$pop)*(PreGTD2$SP.URB.TOTL)/(PreGTD2$MAX.URB.TOTL))
PreGTD2["Citysize_relative_to_nations_Largest" ] <- as.numeric(PreGTD2$city.population_at.attack.time_liniear.grown/PreGTD2$EN.URB.LCTY.UR)
PreGTD2["PROPscale" ]<-as.numeric(PreGTD2$PROPscale)
PreGTD2["HUMscale" ]<-as.numeric(PreGTD2$HUMscale)
PreGTD2["Distance to Urban Center (km)"]<-as.numeric(PreGTD2$WC.UC.dist.km)
PreGTD2["weightGTD"] <- as.numeric((PreGTD2$HUMscale^(1/2))+(PreGTD2$PROPscale/(PreGTD2$PROPscale+1)))
PreGTD2$Citysize_relative_to_nations_Largest[is.na(PreGTD2$Citysize_relative_to_nations_Largest)] <- 0
PreGTD2$weightGTD[is.na(PreGTD2$weightGTD)] <- 0
Linear1 <- lm(Citysize_relative_to_nations_Largest ~ year, weight=weightGTD, data=PreGTD2)
stargazer(Linear1, type="html", out="models.htm")
PreGTD2 <- subset(PreGTD, capital ==!1 & Extra.WAR.In==0 & Extra.WAR.Out==0 & Intra
.WAR==0 & Inter.WAR==0 & (TUPscale== 5 |TUPscale== 7 | TUPscale == 9) $ iyear >= 1990)
PreGTD2$SP.URB.TOTL <- as.numeric(PreGTD2$SP.URB.TOTL)
PreGTD2$MAX.URB.TOTL <- as.numeric(PreGTD2$MAX.URB.TOTL)
PreGTD2$pop <- as.numeric(PreGTD2$pop)
PreGTD2["year"] <- as.numeric(PreGTD2$iyear-1970)
PreGTD2["city.population_2013"] <- PreGTD2$pop
PreGTD2["city.population_at.attack.time_liniear.grown"] <- ((PreGTD2$pop)*(PreGTD2$SP.URB.TOTL)/(PreGTD2$MAX.URB.TOTL))
PreGTD2["Citysize_relative_to_nations_Largest" ] <- as.numeric(PreGTD2$city.population_at.attack.time_liniear.grown/PreGTD2$EN.URB.LCTY.UR)
PreGTD2["PROPscale" ]<-as.numeric(PreGTD2$PROPscale)
PreGTD2["HUMscale" ]<-as.numeric(PreGTD2$HUMscale)
PreGTD2["Distance to Urban Center (km)"]<-as.numeric(PreGTD2$WC.UC.dist.km)
PreGTD2["weightGTD"] <- as.numeric((PreGTD2$HUMscale^(1/2))+(PreGTD2$PROPscale/(PreGTD2$PROPscale+1)))
PreGTD2$Citysize_relative_to_nations_Largest[is.na(PreGTD2$Citysize_relative_to_nations_Largest)] <- 0
PreGTD2$weightGTD[is.na(PreGTD2$weightGTD)] <- 0
Linear1 <- lm(Citysize_relative_to_nations_Largest ~ year, weight=weightGTD, data=PreGTD2)
stargazer(Linear1, type="html", out="models.htm")
plot(PreGTD2$year, 100*PreGTD2$Citysize_relative_to_nations_Largest)
PreGTD2 <- subset(PreGTD, capital ==!1 & Extra.WAR.In==0 & Extra.WAR.Out==0 & Intra
.WAR==0 & Inter.WAR==0 & (TUPscale== 5 |TUPscale== 7 | TUPscale == 9) $ iyear >= 1990)
PreGTD2$SP.URB.TOTL <- as.numeric(PreGTD2$SP.URB.TOTL)
PreGTD2$MAX.URB.TOTL <- as.numeric(PreGTD2$MAX.URB.TOTL)
PreGTD2$pop <- as.numeric(PreGTD2$pop)
PreGTD2["year"] <- as.numeric(PreGTD2$iyear)
PreGTD2["city.population_2013"] <- PreGTD2$pop
PreGTD2["city.population_at.attack.time_liniear.grown"] <- ((PreGTD2$pop)*(PreGTD2$SP.URB.TOTL)/(PreGTD2$MAX.URB.TOTL))
PreGTD2["Citysize_relative_to_nations_Largest" ] <- as.numeric(PreGTD2$city.population_at.attack.time_liniear.grown/PreGTD2$EN.URB.LCTY.UR)
PreGTD2["PROPscale" ]<-as.numeric(PreGTD2$PROPscale)
PreGTD2["HUMscale" ]<-as.numeric(PreGTD2$HUMscale)
PreGTD2["Distance to Urban Center (km)"]<-as.numeric(PreGTD2$WC.UC.dist.km)
PreGTD2["weightGTD"] <- as.numeric((PreGTD2$HUMscale^(1/2))+(PreGTD2$PROPscale/(PreGTD2$PROPscale+1)))
PreGTD2$Citysize_relative_to_nations_Largest[is.na(PreGTD2$Citysize_relative_to_nations_Largest)] <- 0
PreGTD2$weightGTD[is.na(PreGTD2$weightGTD)] <- 0
PreGTD2 <- subset(PreGTD, capital ==!1 & Extra.WAR.In==0 & Extra.WAR.Out==0 & Intra.WAR==0 & Inter.WAR==0 & (TUPscale== 5 |TUPscale== 7 | TUPscale == 9) $ iyear >= 1990)
PreGTD2 <- subset(PreGTD, capital ==!1 & Extra.WAR.In==0 & Extra.WAR.Out==0 & Intra.WAR==0 & Inter.WAR==0 & (TUPscale== 5 |TUPscale== 7 | TUPscale == 9) & iyear >= 1990)
PreGTD2$SP.URB.TOTL <- as.numeric(PreGTD2$SP.URB.TOTL)
PreGTD2$MAX.URB.TOTL <- as.numeric(PreGTD2$MAX.URB.TOTL)
PreGTD2$pop <- as.numeric(PreGTD2$pop)
PreGTD2["year"] <- as.numeric(PreGTD2$iyear)
PreGTD2["city.population_2013"] <- PreGTD2$pop
PreGTD2["city.population_at.attack.time_liniear.grown"] <- ((PreGTD2$pop)*(PreGTD2$SP.URB.TOTL)/(PreGTD2$MAX.URB.TOTL))
PreGTD2["Citysize_relative_to_nations_Largest" ] <- as.numeric(PreGTD2$city.population_at.attack.time_liniear.grown/PreGTD2$EN.URB.LCTY.UR)
PreGTD2["PROPscale" ]<-as.numeric(PreGTD2$PROPscale)
PreGTD2["HUMscale" ]<-as.numeric(PreGTD2$HUMscale)
PreGTD2["Distance to Urban Center (km)"]<-as.numeric(PreGTD2$WC.UC.dist.km)
PreGTD2["weightGTD"] <- as.numeric((PreGTD2$HUMscale^(1/2))+(PreGTD2$PROPscale/(PreGTD2$PROPscale+1)))
PreGTD2$Citysize_relative_to_nations_Largest[is.na(PreGTD2$Citysize_relative_to_nations_Largest)] <- 0
PreGTD2$weightGTD[is.na(PreGTD2$weightGTD)] <- 0
plot(PreGTD2$year, 100*PreGTD2$Citysize_relative_to_nations_Largest)
Linear1 <- lm(Citysize_relative_to_nations_Largest ~ year, weight=weightGTD, data=PreGTD2)
stargazer(Linear1, type="html", out="models.htm")
PreGTD2 <- subset(PreGTD, capital ==!1 & Extra.WAR.In==0 & Extra.WAR.Out==0 & Intra.WAR==0 & Inter.WAR==0 & (TUPscale== 5 |TUPscale== 7 | TUPscale == 9) & iyear >= 2001)
reGTD2$SP.URB.TOTL <- as.numeric(PreGTD2$SP.URB.TOTL)
PreGTD2$MAX.URB.TOTL <- as.numeric(PreGTD2$MAX.URB.TOTL)
PreGTD2$pop <- as.numeric(PreGTD2$pop)
PreGTD2["year"] <- as.numeric(PreGTD2$iyear)
PreGTD2["city.population_2013"] <- PreGTD2$pop
PreGTD2["city.population_at.attack.time_liniear.grown"] <- ((PreGTD2$pop)*(PreGTD2$SP.URB.TOTL)/(PreGTD2$MAX.URB.TOTL))
PreGTD2["Citysize_relative_to_nations_Largest" ] <- as.numeric(PreGTD2$city.population_at.attack.time_liniear.grown/PreGTD2$EN.URB.LCTY.UR)
PreGTD2["PROPscale" ]<-as.numeric(PreGTD2$PROPscale)
PreGTD2["HUMscale" ]<-as.numeric(PreGTD2$HUMscale)
PreGTD2["Distance to Urban Center (km)"]<-as.numeric(PreGTD2$WC.UC.dist.km)
PreGTD2["weightGTD"] <- as.numeric((PreGTD2$HUMscale^(1/2))+(PreGTD2$PROPscale/(PreGTD2$PROPscale+1)))
PreGTD2$Citysize_relative_to_nations_Largest[is.na(PreGTD2$Citysize_relative_to_nations_Largest)] <- 0
PreGTD2$weightGTD[is.na(PreGTD2$weightGTD)] <- 0
Linear1 <- lm(Citysize_relative_to_nations_Largest ~ year, weight=weightGTD, data=PreGTD2)
stargazer(Linear1, type="html", out="models.htm")
PreGTD2 <- subset(PreGTD, capital ==!1 & Extra.WAR.In==0 & Extra.WAR.Out==0 & Intra.WAR==0 & Inter.WAR==0 & (TUPscale== 5 |TUPscale== 7 | TUPscale == 9) & iyear >= 1992)
PreGTD2$SP.URB.TOTL <- as.numeric(PreGTD2$SP.URB.TOTL)
PreGTD2$MAX.URB.TOTL <- as.numeric(PreGTD2$MAX.URB.TOTL)
PreGTD2$pop <- as.numeric(PreGTD2$pop)
PreGTD2["year"] <- as.numeric(PreGTD2$iyear)
PreGTD2["city.population_2013"] <- PreGTD2$pop
PreGTD2["city.population_at.attack.time_liniear.grown"] <- ((PreGTD2$pop)*(PreGTD2$SP.URB.TOTL)/(PreGTD2$MAX.URB.TOTL))
PreGTD2["Citysize_relative_to_nations_Largest" ] <- as.numeric(PreGTD2$city.population_at.attack.time_liniear.grown/PreGTD2$EN.URB.LCTY.UR)
PreGTD2["PROPscale" ]<-as.numeric(PreGTD2$PROPscale)
PreGTD2["HUMscale" ]<-as.numeric(PreGTD2$HUMscale)
PreGTD2["Distance to Urban Center (km)"]<-as.numeric(PreGTD2$WC.UC.dist.km)
PreGTD2["weightGTD"] <- as.numeric((PreGTD2$HUMscale^(1/2))+(PreGTD2$PROPscale/(PreGTD2$PROPscale+1)))
PreGTD2$Citysize_relative_to_nations_Largest[is.na(PreGTD2$Citysize_relative_to_nations_Largest)] <- 0
PreGTD2$weightGTD[is.na(PreGTD2$weightGTD)] <- 0
plot(PreGTD2$year, 100*PreGTD2$Citysize_relative_to_nations_Largest)
summary(Linear1)
PreGTD2 <- subset(PreGTD, capital ==!1 & Extra.WAR.In==0 & Extra.WAR.Out==0 & Intra.WAR==0 & Inter.WAR==0 & (TUPscale== 5 |TUPscale== 7 | TUPscale == 9) & iyear >= 1992)
PreGTD2$SP.URB.TOTL <- as.numeric(PreGTD2$SP.URB.TOTL)
PreGTD2$MAX.URB.TOTL <- as.numeric(PreGTD2$MAX.URB.TOTL)
PreGTD2$pop <- as.numeric(PreGTD2$pop)
PreGTD2["year"] <- as.numeric(PreGTD2$iyear)
PreGTD2["city.population_2013"] <- PreGTD2$pop
PreGTD2["city.population_at.attack.time_liniear.grown"] <- ((PreGTD2$pop)*(PreGTD2$SP.URB.TOTL)/(PreGTD2$MAX.URB.TOTL))
PreGTD2["Citysize_relative_to_nations_Largest" ] <- as.numeric(PreGTD2$city.population_at.attack.time_liniear.grown/PreGTD2$EN.URB.LCTY.UR)
PreGTD2["PROPscale" ]<-as.numeric(PreGTD2$PROPscale)
PreGTD2["HUMscale" ]<-as.numeric(PreGTD2$HUMscale)
PreGTD2["Distance to Urban Center (km)"]<-as.numeric(PreGTD2$WC.UC.dist.km)
PreGTD2["weightGTD"] <- as.numeric((PreGTD2$HUMscale^(1/2))+(PreGTD2$PROPscale^(1/2)/(1000+1)))
PreGTD2$Citysize_relative_to_nations_Largest[is.na(PreGTD2$Citysize_relative_to_nations_Largest)] <- 0
PreGTD2$weightGTD[is.na(PreGTD2$weightGTD)] <- 0
Linear1 <- lm(Citysize_relative_to_nations_Largest ~ year, weight=weightGTD, data=PreGTD2)
stargazer(Linear1, type="html", out="models.htm")
PreGTD2 <- subset(PreGTD, capital ==!1 & Extra.WAR.In==0 & Extra.WAR.Out==0 & Intra.WAR==0 & Inter.WAR==0 & (TUPscale== 5 |TUPscale== 7 | TUPscale == 9))
PreGTD2$SP.URB.TOTL <- as.numeric(PreGTD2$SP.URB.TOTL)
PreGTD2$MAX.URB.TOTL <- as.numeric(PreGTD2$MAX.URB.TOTL)
PreGTD2$pop <- as.numeric(PreGTD2$pop)
PreGTD2["year"] <- as.numeric(PreGTD2$iyear)
PreGTD2["city.population_2013"] <- PreGTD2$pop
PreGTD2["city.population_at.attack.time_liniear.grown"] <- ((PreGTD2$pop)*(PreGTD2$SP.URB.TOTL)/(PreGTD2$MAX.URB.TOTL))
PreGTD2["Citysize_relative_to_nations_Largest" ] <- as.numeric(PreGTD2$city.population_at.attack.time_liniear.grown/PreGTD2$EN.URB.LCTY.UR)
PreGTD2["PROPscale" ]<-as.numeric(PreGTD2$PROPscale)
PreGTD2["HUMscale" ]<-as.numeric(PreGTD2$HUMscale)
PreGTD2["Distance to Urban Center (km)"]<-as.numeric(PreGTD2$WC.UC.dist.km)
PreGTD2["weightGTD"] <- as.numeric((PreGTD2$HUMscale^(1/2))+(PreGTD2$PROPscale^(1/2)/(1000+1)))
PreGTD2$Citysize_relative_to_nations_Largest[is.na(PreGTD2$Citysize_relative_to_nations_Largest)] <- 0
PreGTD2$weightGTD[is.na(PreGTD2$weightGTD)] <- 0
Linear1 <- lm(Citysize_relative_to_nations_Largest ~ year, weight=weightGTD, data=PreGTD2)
stargazer(Linear1, type="html", out="models.htm")
PreGTD2 <- subset(PreGTD, capital ==!1 & Extra.WAR.In==0 & Extra.WAR.Out==0 & Intra.WAR==0 & Inter.WAR==0 & (TUPscale== 5 |TUPscale== 7 | TUPscale == 9))
PreGTD2$SP.URB.TOTL <- as.numeric(PreGTD2$SP.URB.TOTL)
PreGTD2$MAX.URB.TOTL <- as.numeric(PreGTD2$MAX.URB.TOTL)
PreGTD2$pop <- as.numeric(PreGTD2$pop)
PreGTD2["year"] <- as.numeric(PreGTD2$iyear)
PreGTD2["city.population_2013"] <- PreGTD2$pop
PreGTD2["city.population_at.attack.time_liniear.grown"] <- ((PreGTD2$pop)*(PreGTD2$SP.URB.TOTL)/(PreGTD2$MAX.URB.TOTL))
PreGTD2["Citysize_relative_to_nations_Largest" ] <- as.numeric(PreGTD2$city.population_at.attack.time_liniear.grown/PreGTD2$EN.URB.LCTY.UR)
PreGTD2["PROPscale" ]<-as.numeric(PreGTD2$PROPscale)
PreGTD2["HUMscale" ]<-as.numeric(PreGTD2$HUMscale)
PreGTD2["Distance to Urban Center (km)"]<-as.numeric(PreGTD2$WC.UC.dist.km)
PreGTD2["weightGTD"] <- as.numeric((PreGTD2$HUMscale^(1/2))+(PreGTD2$PROPscale/(PreGTD2$PROPscale+1)+1))
PreGTD2$Citysize_relative_to_nations_Largest[is.na(PreGTD2$Citysize_relative_to_nations_Largest)] <- 0
PreGTD2$weightGTD[is.na(PreGTD2$weightGTD)] <- 0
Linear1 <- lm(Citysize_relative_to_nations_Largest ~ year, weight=weightGTD, data=PreGTD2)
stargazer(Linear1, type="html", out="models.htm")
summary(Linear1)
# selecting non-capital, non-military atacks
PreGTD2 <- subset(PreGTD, capital ==!1 & (TUPscale== 5 |TUPscale== 7 | TUPscale == 9))
PreGTD2$SP.URB.TOTL <- as.numeric(PreGTD2$SP.URB.TOTL)
PreGTD2$MAX.URB.TOTL <- as.numeric(PreGTD2$MAX.URB.TOTL)
PreGTD2$pop <- as.numeric(PreGTD2$pop)
# prepare for regression
PreGTD2["year"] <- as.numeric(PreGTD2$iyear)
PreGTD2["city.population_2013"] <- PreGTD2$pop
PreGTD2["city.population_at.attack.time_liniear.grown"] <- ((PreGTD2$pop)*(PreGTD2$SP.URB.TOTL)/(PreGTD2$MAX.URB.TOTL))
PreGTD2["Citysize_relative_to_nations_Largest" ] <- as.numeric(PreGTD2$city.population_at.attack.time_liniear.grown/PreGTD2$EN.URB.LCTY.UR)
PreGTD2["PROPscale" ]<-as.numeric(PreGTD2$PROPscale)
PreGTD2["HUMscale" ]<-as.numeric(PreGTD2$HUMscale)
PreGTD2["Distance to Urban Center (km)"]<-as.numeric(PreGTD2$WC.UC.dist.km)
PreGTD2["weightGTD"] <- as.numeric((PreGTD2$HUMscale^(1/2))+(PreGTD2$PROPscale/(PreGTD2$PROPscale+1)+1))
PreGTD2$Citysize_relative_to_nations_Largest[is.na(PreGTD2$Citysize_relative_to_nations_Largest)] <- 0
PreGTD2$weightGTD[is.na(PreGTD2$weightGTD)] <- 0
# linear regression of Citysize_relative_to_nations_Largest over time
Linear1 <- lm(Citysize_relative_to_nations_Largest ~ year, weight=weightGTD, data=PreGTD2)
stargazer(Linear1, type="html", out="models.htm")
plot(PreGTD2$year, 100*PreGTD2$Citysize_relative_to_nations_Largest)
View(PreGTD2)
stargazer(Linear1, type="html", out="Analysis Test/models.htm")
stargazer(Linear1, type="latex", out="Analysis Test/Linear Regression of realtive city size.html")
plot(PreGTD2$year, 100*PreGTD2$Citysize_relative_to_nations_Largest)
# MPP-E1180: Introduction to Collaborative Social Science Data Analysis
### Fall 2014
### Instructor: Christopher Gandrud
##############################################
############## URBAN TERROR ##################
##############################################
#############  Part 0: PACKAGES   ############
##############################################
##########Lukas B Cameron R Sascha S##########
##############################################
########## Loading Needed Packages ###########
##############################################
##########  Package Loading  ###########
#Loading all required packages for the UrbanTerror Project using @stevenworthington's ipak.R gist from https://gist.github.com/stevenworthington/3178163.
# ipak function: install and load multiple R packages.
# check to see if packages are installed. Install them if they are not, then load them into the R session.
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages <- c("foreign", "car", "RCurl", "ggplot2", "WDI", "httr", "iterators", "dplyr", "plyr", "stargazer",
"XML", "maps", "ggmap", "Imap", "geosphere", "maptools", "rgeos", "foreach", "DataCombine")
ipak(packages)
rm(packages)
rm(ipak)
# MPP-E1180: Introduction to Collaborative Social Science Data Analysis
### Fall 2014
### Instructor: Christopher Gandrud
##############################################
############## URBAN TERROR ##################
##############################################
###############  Part 1: DATA   ##############
##############################################
##########Lukas B Cameron R Sascha S##########
##############################################
####### Gathering, Cleaning, Merging #########
##############################################
# In this script we combine all our previously established databases into one, bringing together
# terror data, country level data and city level data into one database ready for analysis.
#############################################################################################################
################### Loading Datasets previously gathered, cleaned and partially merged ######################
#############################################################################################################
# Global Terrorism Database (GTD) with some new scales and categories we introduced to the GTD for our purposes
if(file.exists("Cache/GTD.csv")) {GTD <- read.csv("Cache/GTD.csv")} else{source("1.a - Global Terrorism Database.R")}
# Country level data from the World Bank Development Indicators and the The Correlates of War (COW) project data on wars.
if(file.exists("Cache/CountryData.csv")){CountryData <- read.csv("Cache/CountryData.csv")} else{source("1.b - Country Data.R")}
# City level data froma number of sources, including web sraping
if(file.exists("Cache/WC.UC.dist.csv")) {WC.UC.dist <- read.csv("Cache/WC.UC.dist.csv")} else{source("1.c - City Data.R")}
#############################################################################################################
############################# Merge the Data Sets into a "PreGTD"###########################################
#############################################################################################################
###### Merge GTD & Country Level Data ######
GTDWDI <- merge(GTD, CountryData, by.x=c("country_txt", "iyear"), by.y=c("country", "year"), all.x=TRUE, sort=TRUE)
###### Merge Combined set with & City Data ######
GTDWDIcity <- GTDWDI$city
GTDWDIcountry <- GTDWDI$country_txt
Cities <- WC.UC.dist$name
Countries <- WC.UC.dist$country.etc
WC.UC.dist["merge"] <- paste(Countries, Cities, sep="")
Testframe <- GTDWDI
Testframe["merge"] <-data.frame(paste(GTDWDIcountry, GTDWDIcity, sep=""))
PreGTD <- merge(Testframe, WC.UC.dist, by=c("merge"), all.x=TRUE)
PreGTD  <- PreGTD [order(-PreGTD$eventid, na.last=TRUE) , ]
PreGTD <- subset(PreGTD, select=c(eventid, merge, iyear, city, pop, capital, region_txt, largestC, Closest.Urban.Center,
largest.UC, coastalMC, WC.UC.dist.km, part.of.urban.center, in.urban.centers.environment, attacktype1,
targtype1, targsubtype1, weaptype1, weapsubtype1, TUPscale, PROPscale, HUMscale, SP.POP.TOTL,
EN.URB.LCTY.UR, MAX.URB.LCTY.UR, EN.URB.MCTY, MAX.URB.MCTY, SP.URB.TOTL, MAX.URB.TOTL,
EN.POP.DNST, Extra.WAR.In, Extra.WAR.Out, Intra.WAR, Inter.WAR))
PreGTD$part.of.urban.center[is.na(PreGTD$part.of.urban.center)] <- FALSE
PreGTD$in.urban.centers.environment[is.na(PreGTD$in.urban.centers.environment)] <- FALSE
PreGTD$in.urban.centers.environment <- recode(PreGTD$in.urban.centers.environment, "TRUE=1")
PreGTD$part.of.urban.center <- recode(PreGTD$part.of.urban.center, "TRUE=1")
PreGTD$capital[is.na(PreGTD$capital)] <- 0
PreGTD$largestC[is.na(PreGTD$largestC)] <- 0
PreGTD$largest.UC[is.na(PreGTD$largest.UC)] <- 0
PreGTD$coastalMC[is.na(PreGTD$coastalMC)] <- 0
PreGTD$pop[is.na(PreGTD$pop)] <- 0
write.csv(PreGTD, file="TerrorData/Pregtd.csv")
rm(Testframe, GTDWDIcity, GTDWDIcountry, Cities, GTD, Countries, GTDWDI, WDIData)
View(PreGTD)
View(CountryData)
View(PreGTD)
G["realpop"] <- ifelse((G$largestC ==1), G$EN.URB.LCTY.UR, 0)
G["realpop"] <- ifelse((G$largestC=1), G$EN.URB.LCTY.UR, 0)
G <- PreGTD
G["realpop"] <- ifelse((G$largestC=1), G$EN.URB.LCTY.UR, 0)
View(G)
G["realpop"] <- ifelse((G$largestC==1), G$EN.URB.LCTY.UR, 0)
View(G)
G <- PreGTD
G["realpop"] <- ifelse((G$largestC==1), G$EN.URB.LCTY.UR, 0)
View(G)
G["realpop"] <- ifelse((G$part.of.urban.center==1), (ifelse(largest.UC==1, G$EN.URB.LCTY, G$realpop)), G$realpop)
G["realpop"] <- ifelse((G$part.of.urban.center==1), (ifelse(G$largest.UC==1, G$EN.URB.LCTY, G$realpop)), G$realpop)
View(G)
G <- PreGTD
G["realpop"] <- G$pop
G["realpop"] <- ifelse((G$largestC==1), G$EN.URB.LCTY.UR, G$realpop)
G["realpop"] <- ifelse((G$part.of.urban.center==1), (ifelse(G$largest.UC==1, G$EN.URB.LCTY, G$realpop)), G$realpop)
View(G)
View(PreGTD)
View(G)
