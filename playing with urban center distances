


distance.UC <- function(log1, lat1)
{gdist(log1, lat1, UrbanCenters$lon, UrbanCenters$lat, units = "km", a = 6378137.0, b = 6356752.3142, verbose = FALSE)}



zzz <- foreach((world.cities2009=iter(world.cities2009, by='row')), .combine=rbind) %do% min(distance.UC(world.cities2009$long, lat1=world.cities2009$lat)) 

               

output <- do.call(rbind, lapply(world.cities2009, distance.UC_WC9))
  
  
  world.cities2009$name, ))












distance.UC_WC9 <- function(world.cities2009)
{
  rows <-data.frame(row(world.cities2009, as.factor=FALSE))
  distance.UC(log1=world.cities2009$long[rows], lat1=world.cities2009$lat[rows])}


min()

distance.UC_WC9(rows$X1)
}

rows <-data.frame(row(world.cities2009, as.factor=FALSE))




)X <-
test <- data.frame(pmin.int(distance.UC(world.cities2009$long[X], world.cities2009$lat[X])))
  
data.frame()


rm(point1, point2)

ddUC <-data.frame(paste(UrbanCenters$lon, UrbanCenters$lat, sep=" "), row.names = NULL)
ddWC <-data.frame(paste(world.cities2009$long, world.cities2009$lat, sep=" "), row.names = NULL)



distance.chord <- function(point1,point2)
{R <- 6371
 p1rad <- point1 * pi/180
 p2rad <- point2 * pi/180
 lat <- p1rad[2]
 lon <- p1rad[1]
 u1 <- c(cos(lat)*cos(lon), cos(lat)*sin(lon), sin(lat))
 lat <- p2rad[2]
 lon <- p2rad[1]
 u2 <- c(cos(lat)*cos(lon),cos(lat)*sin(lon),sin(lat))
 R*sqrt(sum((u1-u2)^2)) }
